{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/three/examples/jsm/controls/OrbitControls.js"],"sourcesContent":["import {\n\tControls,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3,\n\tPlane,\n\tRay,\n\tMathUtils\n} from 'three';\n\n// OrbitControls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\nconst _ray = new Ray();\nconst _plane = new Plane();\nconst _TILT_LIMIT = Math.cos( 70 * MathUtils.DEG2RAD );\n\nconst _v = new Vector3();\nconst _twoPI = 2 * Math.PI;\n\nconst _STATE = {\n\tNONE: - 1,\n\tROTATE: 0,\n\tDOLLY: 1,\n\tPAN: 2,\n\tTOUCH_ROTATE: 3,\n\tTOUCH_PAN: 4,\n\tTOUCH_DOLLY_PAN: 5,\n\tTOUCH_DOLLY_ROTATE: 6\n};\nconst _EPS = 0.000001;\n\nclass OrbitControls extends Controls {\n\n\tconstructor( object, domElement = null ) {\n\n\t\tsuper( object, domElement );\n\n\t\tthis.state = _STATE.NONE;\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// Sets the 3D cursor (similar to Blender), from which the maxTargetRadius takes effect\n\t\tthis.cursor = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// Limit camera target within a spherical area around the cursor\n\t\tthis.minTargetRadius = 0;\n\t\tthis.maxTargetRadius = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\t\tthis.zoomToCursor = false;\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t// internals\n\n\t\tthis._lastPosition = new Vector3();\n\t\tthis._lastQuaternion = new Quaternion();\n\t\tthis._lastTargetPosition = new Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tthis._quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\tthis._quatInverse = this._quat.clone().invert();\n\n\t\t// current position in spherical coordinates\n\t\tthis._spherical = new Spherical();\n\t\tthis._sphericalDelta = new Spherical();\n\n\t\tthis._scale = 1;\n\t\tthis._panOffset = new Vector3();\n\n\t\tthis._rotateStart = new Vector2();\n\t\tthis._rotateEnd = new Vector2();\n\t\tthis._rotateDelta = new Vector2();\n\n\t\tthis._panStart = new Vector2();\n\t\tthis._panEnd = new Vector2();\n\t\tthis._panDelta = new Vector2();\n\n\t\tthis._dollyStart = new Vector2();\n\t\tthis._dollyEnd = new Vector2();\n\t\tthis._dollyDelta = new Vector2();\n\n\t\tthis._dollyDirection = new Vector3();\n\t\tthis._mouse = new Vector2();\n\t\tthis._performCursorZoom = false;\n\n\t\tthis._pointers = [];\n\t\tthis._pointerPositions = {};\n\n\t\tthis._controlActive = false;\n\n\t\t// event listeners\n\n\t\tthis._onPointerMove = onPointerMove.bind( this );\n\t\tthis._onPointerDown = onPointerDown.bind( this );\n\t\tthis._onPointerUp = onPointerUp.bind( this );\n\t\tthis._onContextMenu = onContextMenu.bind( this );\n\t\tthis._onMouseWheel = onMouseWheel.bind( this );\n\t\tthis._onKeyDown = onKeyDown.bind( this );\n\n\t\tthis._onTouchStart = onTouchStart.bind( this );\n\t\tthis._onTouchMove = onTouchMove.bind( this );\n\n\t\tthis._onMouseDown = onMouseDown.bind( this );\n\t\tthis._onMouseMove = onMouseMove.bind( this );\n\n\t\tthis._interceptControlDown = interceptControlDown.bind( this );\n\t\tthis._interceptControlUp = interceptControlUp.bind( this );\n\n\t\t//\n\n\t\tif ( this.domElement !== null ) {\n\n\t\t\tthis.connect();\n\n\t\t}\n\n\t\tthis.update();\n\n\t}\n\n\tconnect() {\n\n\t\tthis.domElement.addEventListener( 'pointerdown', this._onPointerDown );\n\t\tthis.domElement.addEventListener( 'pointercancel', this._onPointerUp );\n\n\t\tthis.domElement.addEventListener( 'contextmenu', this._onContextMenu );\n\t\tthis.domElement.addEventListener( 'wheel', this._onMouseWheel, { passive: false } );\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\t\tdocument.addEventListener( 'keydown', this._interceptControlDown, { passive: true, capture: true } );\n\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t}\n\n\tdisconnect() {\n\n\t\tthis.domElement.removeEventListener( 'pointerdown', this._onPointerDown );\n\t\tthis.domElement.removeEventListener( 'pointermove', this._onPointerMove );\n\t\tthis.domElement.removeEventListener( 'pointerup', this._onPointerUp );\n\t\tthis.domElement.removeEventListener( 'pointercancel', this._onPointerUp );\n\n\t\tthis.domElement.removeEventListener( 'wheel', this._onMouseWheel );\n\t\tthis.domElement.removeEventListener( 'contextmenu', this._onContextMenu );\n\n\t\tthis.stopListenToKeyEvents();\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\t\tdocument.removeEventListener( 'keydown', this._interceptControlDown, { capture: true } );\n\n\t\tthis.domElement.style.touchAction = 'auto';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.disconnect();\n\n\t}\n\n\tgetPolarAngle() {\n\n\t\treturn this._spherical.phi;\n\n\t}\n\n\tgetAzimuthalAngle() {\n\n\t\treturn this._spherical.theta;\n\n\t}\n\n\tgetDistance() {\n\n\t\treturn this.object.position.distanceTo( this.target );\n\n\t}\n\n\tlistenToKeyEvents( domElement ) {\n\n\t\tdomElement.addEventListener( 'keydown', this._onKeyDown );\n\t\tthis._domElementKeyEvents = domElement;\n\n\t}\n\n\tstopListenToKeyEvents() {\n\n\t\tif ( this._domElementKeyEvents !== null ) {\n\n\t\t\tthis._domElementKeyEvents.removeEventListener( 'keydown', this._onKeyDown );\n\t\t\tthis._domElementKeyEvents = null;\n\n\t\t}\n\n\t}\n\n\tsaveState() {\n\n\t\tthis.target0.copy( this.target );\n\t\tthis.position0.copy( this.object.position );\n\t\tthis.zoom0 = this.object.zoom;\n\n\t}\n\n\treset() {\n\n\t\tthis.target.copy( this.target0 );\n\t\tthis.object.position.copy( this.position0 );\n\t\tthis.object.zoom = this.zoom0;\n\n\t\tthis.object.updateProjectionMatrix();\n\t\tthis.dispatchEvent( _changeEvent );\n\n\t\tthis.update();\n\n\t\tthis.state = _STATE.NONE;\n\n\t}\n\n\tupdate( deltaTime = null ) {\n\n\t\tconst position = this.object.position;\n\n\t\t_v.copy( position ).sub( this.target );\n\n\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t_v.applyQuaternion( this._quat );\n\n\t\t// angle from z-axis around y-axis\n\t\tthis._spherical.setFromVector3( _v );\n\n\t\tif ( this.autoRotate && this.state === _STATE.NONE ) {\n\n\t\t\tthis._rotateLeft( this._getAutoRotationAngle( deltaTime ) );\n\n\t\t}\n\n\t\tif ( this.enableDamping ) {\n\n\t\t\tthis._spherical.theta += this._sphericalDelta.theta * this.dampingFactor;\n\t\t\tthis._spherical.phi += this._sphericalDelta.phi * this.dampingFactor;\n\n\t\t} else {\n\n\t\t\tthis._spherical.theta += this._sphericalDelta.theta;\n\t\t\tthis._spherical.phi += this._sphericalDelta.phi;\n\n\t\t}\n\n\t\t// restrict theta to be between desired limits\n\n\t\tlet min = this.minAzimuthAngle;\n\t\tlet max = this.maxAzimuthAngle;\n\n\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\tif ( min < - Math.PI ) min += _twoPI; else if ( min > Math.PI ) min -= _twoPI;\n\n\t\t\tif ( max < - Math.PI ) max += _twoPI; else if ( max > Math.PI ) max -= _twoPI;\n\n\t\t\tif ( min <= max ) {\n\n\t\t\t\tthis._spherical.theta = Math.max( min, Math.min( max, this._spherical.theta ) );\n\n\t\t\t} else {\n\n\t\t\t\tthis._spherical.theta = ( this._spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\tMath.max( min, this._spherical.theta ) :\n\t\t\t\t\tMath.min( max, this._spherical.theta );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restrict phi to be between desired limits\n\t\tthis._spherical.phi = Math.max( this.minPolarAngle, Math.min( this.maxPolarAngle, this._spherical.phi ) );\n\n\t\tthis._spherical.makeSafe();\n\n\n\t\t// move target to panned location\n\n\t\tif ( this.enableDamping === true ) {\n\n\t\t\tthis.target.addScaledVector( this._panOffset, this.dampingFactor );\n\n\t\t} else {\n\n\t\t\tthis.target.add( this._panOffset );\n\n\t\t}\n\n\t\t// Limit the target distance from the cursor to create a sphere around the center of interest\n\t\tthis.target.sub( this.cursor );\n\t\tthis.target.clampLength( this.minTargetRadius, this.maxTargetRadius );\n\t\tthis.target.add( this.cursor );\n\n\t\tlet zoomChanged = false;\n\t\t// adjust the camera position based on zoom only if we're not zooming to the cursor or if it's an ortho camera\n\t\t// we adjust zoom later in these cases\n\t\tif ( this.zoomToCursor && this._performCursorZoom || this.object.isOrthographicCamera ) {\n\n\t\t\tthis._spherical.radius = this._clampDistance( this._spherical.radius );\n\n\t\t} else {\n\n\t\t\tconst prevRadius = this._spherical.radius;\n\t\t\tthis._spherical.radius = this._clampDistance( this._spherical.radius * this._scale );\n\t\t\tzoomChanged = prevRadius != this._spherical.radius;\n\n\t\t}\n\n\t\t_v.setFromSpherical( this._spherical );\n\n\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t_v.applyQuaternion( this._quatInverse );\n\n\t\tposition.copy( this.target ).add( _v );\n\n\t\tthis.object.lookAt( this.target );\n\n\t\tif ( this.enableDamping === true ) {\n\n\t\t\tthis._sphericalDelta.theta *= ( 1 - this.dampingFactor );\n\t\t\tthis._sphericalDelta.phi *= ( 1 - this.dampingFactor );\n\n\t\t\tthis._panOffset.multiplyScalar( 1 - this.dampingFactor );\n\n\t\t} else {\n\n\t\t\tthis._sphericalDelta.set( 0, 0, 0 );\n\n\t\t\tthis._panOffset.set( 0, 0, 0 );\n\n\t\t}\n\n\t\t// adjust camera position\n\t\tif ( this.zoomToCursor && this._performCursorZoom ) {\n\n\t\t\tlet newRadius = null;\n\t\t\tif ( this.object.isPerspectiveCamera ) {\n\n\t\t\t\t// move the camera down the pointer ray\n\t\t\t\t// this method avoids floating point error\n\t\t\t\tconst prevRadius = _v.length();\n\t\t\t\tnewRadius = this._clampDistance( prevRadius * this._scale );\n\n\t\t\t\tconst radiusDelta = prevRadius - newRadius;\n\t\t\t\tthis.object.position.addScaledVector( this._dollyDirection, radiusDelta );\n\t\t\t\tthis.object.updateMatrixWorld();\n\n\t\t\t\tzoomChanged = !! radiusDelta;\n\n\t\t\t} else if ( this.object.isOrthographicCamera ) {\n\n\t\t\t\t// adjust the ortho camera position based on zoom changes\n\t\t\t\tconst mouseBefore = new Vector3( this._mouse.x, this._mouse.y, 0 );\n\t\t\t\tmouseBefore.unproject( this.object );\n\n\t\t\t\tconst prevZoom = this.object.zoom;\n\t\t\t\tthis.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom / this._scale ) );\n\t\t\t\tthis.object.updateProjectionMatrix();\n\n\t\t\t\tzoomChanged = prevZoom !== this.object.zoom;\n\n\t\t\t\tconst mouseAfter = new Vector3( this._mouse.x, this._mouse.y, 0 );\n\t\t\t\tmouseAfter.unproject( this.object );\n\n\t\t\t\tthis.object.position.sub( mouseAfter ).add( mouseBefore );\n\t\t\t\tthis.object.updateMatrixWorld();\n\n\t\t\t\tnewRadius = _v.length();\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled.' );\n\t\t\t\tthis.zoomToCursor = false;\n\n\t\t\t}\n\n\t\t\t// handle the placement of the target\n\t\t\tif ( newRadius !== null ) {\n\n\t\t\t\tif ( this.screenSpacePanning ) {\n\n\t\t\t\t\t// position the orbit target in front of the new camera position\n\t\t\t\t\tthis.target.set( 0, 0, - 1 )\n\t\t\t\t\t\t.transformDirection( this.object.matrix )\n\t\t\t\t\t\t.multiplyScalar( newRadius )\n\t\t\t\t\t\t.add( this.object.position );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// get the ray and translation plane to compute target\n\t\t\t\t\t_ray.origin.copy( this.object.position );\n\t\t\t\t\t_ray.direction.set( 0, 0, - 1 ).transformDirection( this.object.matrix );\n\n\t\t\t\t\t// if the camera is 20 degrees above the horizon then don't adjust the focus target to avoid\n\t\t\t\t\t// extremely large values\n\t\t\t\t\tif ( Math.abs( this.object.up.dot( _ray.direction ) ) < _TILT_LIMIT ) {\n\n\t\t\t\t\t\tthis.object.lookAt( this.target );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_plane.setFromNormalAndCoplanarPoint( this.object.up, this.target );\n\t\t\t\t\t\t_ray.intersectPlane( _plane, this.target );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( this.object.isOrthographicCamera ) {\n\n\t\t\tconst prevZoom = this.object.zoom;\n\t\t\tthis.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom / this._scale ) );\n\n\t\t\tif ( prevZoom !== this.object.zoom ) {\n\n\t\t\t\tthis.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._scale = 1;\n\t\tthis._performCursorZoom = false;\n\n\t\t// update condition is:\n\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\tif ( zoomChanged ||\n\t\t\tthis._lastPosition.distanceToSquared( this.object.position ) > _EPS ||\n\t\t\t8 * ( 1 - this._lastQuaternion.dot( this.object.quaternion ) ) > _EPS ||\n\t\t\tthis._lastTargetPosition.distanceToSquared( this.target ) > _EPS ) {\n\n\t\t\tthis.dispatchEvent( _changeEvent );\n\n\t\t\tthis._lastPosition.copy( this.object.position );\n\t\t\tthis._lastQuaternion.copy( this.object.quaternion );\n\t\t\tthis._lastTargetPosition.copy( this.target );\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t_getAutoRotationAngle( deltaTime ) {\n\n\t\tif ( deltaTime !== null ) {\n\n\t\t\treturn ( _twoPI / 60 * this.autoRotateSpeed ) * deltaTime;\n\n\t\t} else {\n\n\t\t\treturn _twoPI / 60 / 60 * this.autoRotateSpeed;\n\n\t\t}\n\n\t}\n\n\t_getZoomScale( delta ) {\n\n\t\tconst normalizedDelta = Math.abs( delta * 0.01 );\n\t\treturn Math.pow( 0.95, this.zoomSpeed * normalizedDelta );\n\n\t}\n\n\t_rotateLeft( angle ) {\n\n\t\tthis._sphericalDelta.theta -= angle;\n\n\t}\n\n\t_rotateUp( angle ) {\n\n\t\tthis._sphericalDelta.phi -= angle;\n\n\t}\n\n\t_panLeft( distance, objectMatrix ) {\n\n\t\t_v.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t_v.multiplyScalar( - distance );\n\n\t\tthis._panOffset.add( _v );\n\n\t}\n\n\t_panUp( distance, objectMatrix ) {\n\n\t\tif ( this.screenSpacePanning === true ) {\n\n\t\t\t_v.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t} else {\n\n\t\t\t_v.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t_v.crossVectors( this.object.up, _v );\n\n\t\t}\n\n\t\t_v.multiplyScalar( distance );\n\n\t\tthis._panOffset.add( _v );\n\n\t}\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\t_pan( deltaX, deltaY ) {\n\n\t\tconst element = this.domElement;\n\n\t\tif ( this.object.isPerspectiveCamera ) {\n\n\t\t\t// perspective\n\t\t\tconst position = this.object.position;\n\t\t\t_v.copy( position ).sub( this.target );\n\t\t\tlet targetDistance = _v.length();\n\n\t\t\t// half of the fov is center to top of screen\n\t\t\ttargetDistance *= Math.tan( ( this.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\tthis._panLeft( 2 * deltaX * targetDistance / element.clientHeight, this.object.matrix );\n\t\t\tthis._panUp( 2 * deltaY * targetDistance / element.clientHeight, this.object.matrix );\n\n\t\t} else if ( this.object.isOrthographicCamera ) {\n\n\t\t\t// orthographic\n\t\t\tthis._panLeft( deltaX * ( this.object.right - this.object.left ) / this.object.zoom / element.clientWidth, this.object.matrix );\n\t\t\tthis._panUp( deltaY * ( this.object.top - this.object.bottom ) / this.object.zoom / element.clientHeight, this.object.matrix );\n\n\t\t} else {\n\n\t\t\t// camera neither orthographic nor perspective\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\tthis.enablePan = false;\n\n\t\t}\n\n\t}\n\n\t_dollyOut( dollyScale ) {\n\n\t\tif ( this.object.isPerspectiveCamera || this.object.isOrthographicCamera ) {\n\n\t\t\tthis._scale /= dollyScale;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tthis.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t_dollyIn( dollyScale ) {\n\n\t\tif ( this.object.isPerspectiveCamera || this.object.isOrthographicCamera ) {\n\n\t\t\tthis._scale *= dollyScale;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tthis.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t_updateZoomParameters( x, y ) {\n\n\t\tif ( ! this.zoomToCursor ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._performCursorZoom = true;\n\n\t\tconst rect = this.domElement.getBoundingClientRect();\n\t\tconst dx = x - rect.left;\n\t\tconst dy = y - rect.top;\n\t\tconst w = rect.width;\n\t\tconst h = rect.height;\n\n\t\tthis._mouse.x = ( dx / w ) * 2 - 1;\n\t\tthis._mouse.y = - ( dy / h ) * 2 + 1;\n\n\t\tthis._dollyDirection.set( this._mouse.x, this._mouse.y, 1 ).unproject( this.object ).sub( this.object.position ).normalize();\n\n\t}\n\n\t_clampDistance( dist ) {\n\n\t\treturn Math.max( this.minDistance, Math.min( this.maxDistance, dist ) );\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\t_handleMouseDownRotate( event ) {\n\n\t\tthis._rotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\t_handleMouseDownDolly( event ) {\n\n\t\tthis._updateZoomParameters( event.clientX, event.clientX );\n\t\tthis._dollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\t_handleMouseDownPan( event ) {\n\n\t\tthis._panStart.set( event.clientX, event.clientY );\n\n\t}\n\n\t_handleMouseMoveRotate( event ) {\n\n\t\tthis._rotateEnd.set( event.clientX, event.clientY );\n\n\t\tthis._rotateDelta.subVectors( this._rotateEnd, this._rotateStart ).multiplyScalar( this.rotateSpeed );\n\n\t\tconst element = this.domElement;\n\n\t\tthis._rotateLeft( _twoPI * this._rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\tthis._rotateUp( _twoPI * this._rotateDelta.y / element.clientHeight );\n\n\t\tthis._rotateStart.copy( this._rotateEnd );\n\n\t\tthis.update();\n\n\t}\n\n\t_handleMouseMoveDolly( event ) {\n\n\t\tthis._dollyEnd.set( event.clientX, event.clientY );\n\n\t\tthis._dollyDelta.subVectors( this._dollyEnd, this._dollyStart );\n\n\t\tif ( this._dollyDelta.y > 0 ) {\n\n\t\t\tthis._dollyOut( this._getZoomScale( this._dollyDelta.y ) );\n\n\t\t} else if ( this._dollyDelta.y < 0 ) {\n\n\t\t\tthis._dollyIn( this._getZoomScale( this._dollyDelta.y ) );\n\n\t\t}\n\n\t\tthis._dollyStart.copy( this._dollyEnd );\n\n\t\tthis.update();\n\n\t}\n\n\t_handleMouseMovePan( event ) {\n\n\t\tthis._panEnd.set( event.clientX, event.clientY );\n\n\t\tthis._panDelta.subVectors( this._panEnd, this._panStart ).multiplyScalar( this.panSpeed );\n\n\t\tthis._pan( this._panDelta.x, this._panDelta.y );\n\n\t\tthis._panStart.copy( this._panEnd );\n\n\t\tthis.update();\n\n\t}\n\n\t_handleMouseWheel( event ) {\n\n\t\tthis._updateZoomParameters( event.clientX, event.clientY );\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tthis._dollyIn( this._getZoomScale( event.deltaY ) );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tthis._dollyOut( this._getZoomScale( event.deltaY ) );\n\n\t\t}\n\n\t\tthis.update();\n\n\t}\n\n\t_handleKeyDown( event ) {\n\n\t\tlet needsUpdate = false;\n\n\t\tswitch ( event.code ) {\n\n\t\t\tcase this.keys.UP:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tthis._rotateUp( _twoPI * this.rotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._pan( 0, this.keyPanSpeed );\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase this.keys.BOTTOM:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tthis._rotateUp( - _twoPI * this.rotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._pan( 0, - this.keyPanSpeed );\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase this.keys.LEFT:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tthis._rotateLeft( _twoPI * this.rotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._pan( this.keyPanSpeed, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase this.keys.RIGHT:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tthis._rotateLeft( - _twoPI * this.rotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._pan( - this.keyPanSpeed, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\tevent.preventDefault();\n\n\t\t\tthis.update();\n\n\t\t}\n\n\n\t}\n\n\t_handleTouchStartRotate( event ) {\n\n\t\tif ( this._pointers.length === 1 ) {\n\n\t\t\tthis._rotateStart.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._rotateStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\t_handleTouchStartPan( event ) {\n\n\t\tif ( this._pointers.length === 1 ) {\n\n\t\t\tthis._panStart.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._panStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\t_handleTouchStartDolly( event ) {\n\n\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\tconst dx = event.pageX - position.x;\n\t\tconst dy = event.pageY - position.y;\n\n\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tthis._dollyStart.set( 0, distance );\n\n\t}\n\n\t_handleTouchStartDollyPan( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchStartDolly( event );\n\n\t\tif ( this.enablePan ) this._handleTouchStartPan( event );\n\n\t}\n\n\t_handleTouchStartDollyRotate( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchStartDolly( event );\n\n\t\tif ( this.enableRotate ) this._handleTouchStartRotate( event );\n\n\t}\n\n\t_handleTouchMoveRotate( event ) {\n\n\t\tif ( this._pointers.length == 1 ) {\n\n\t\t\tthis._rotateEnd.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._rotateEnd.set( x, y );\n\n\t\t}\n\n\t\tthis._rotateDelta.subVectors( this._rotateEnd, this._rotateStart ).multiplyScalar( this.rotateSpeed );\n\n\t\tconst element = this.domElement;\n\n\t\tthis._rotateLeft( _twoPI * this._rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\tthis._rotateUp( _twoPI * this._rotateDelta.y / element.clientHeight );\n\n\t\tthis._rotateStart.copy( this._rotateEnd );\n\n\t}\n\n\t_handleTouchMovePan( event ) {\n\n\t\tif ( this._pointers.length === 1 ) {\n\n\t\t\tthis._panEnd.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._panEnd.set( x, y );\n\n\t\t}\n\n\t\tthis._panDelta.subVectors( this._panEnd, this._panStart ).multiplyScalar( this.panSpeed );\n\n\t\tthis._pan( this._panDelta.x, this._panDelta.y );\n\n\t\tthis._panStart.copy( this._panEnd );\n\n\t}\n\n\t_handleTouchMoveDolly( event ) {\n\n\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\tconst dx = event.pageX - position.x;\n\t\tconst dy = event.pageY - position.y;\n\n\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tthis._dollyEnd.set( 0, distance );\n\n\t\tthis._dollyDelta.set( 0, Math.pow( this._dollyEnd.y / this._dollyStart.y, this.zoomSpeed ) );\n\n\t\tthis._dollyOut( this._dollyDelta.y );\n\n\t\tthis._dollyStart.copy( this._dollyEnd );\n\n\t\tconst centerX = ( event.pageX + position.x ) * 0.5;\n\t\tconst centerY = ( event.pageY + position.y ) * 0.5;\n\n\t\tthis._updateZoomParameters( centerX, centerY );\n\n\t}\n\n\t_handleTouchMoveDollyPan( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchMoveDolly( event );\n\n\t\tif ( this.enablePan ) this._handleTouchMovePan( event );\n\n\t}\n\n\t_handleTouchMoveDollyRotate( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchMoveDolly( event );\n\n\t\tif ( this.enableRotate ) this._handleTouchMoveRotate( event );\n\n\t}\n\n\t// pointers\n\n\t_addPointer( event ) {\n\n\t\tthis._pointers.push( event.pointerId );\n\n\t}\n\n\t_removePointer( event ) {\n\n\t\tdelete this._pointerPositions[ event.pointerId ];\n\n\t\tfor ( let i = 0; i < this._pointers.length; i ++ ) {\n\n\t\t\tif ( this._pointers[ i ] == event.pointerId ) {\n\n\t\t\t\tthis._pointers.splice( i, 1 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_isTrackingPointer( event ) {\n\n\t\tfor ( let i = 0; i < this._pointers.length; i ++ ) {\n\n\t\t\tif ( this._pointers[ i ] == event.pointerId ) return true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t_trackPointer( event ) {\n\n\t\tlet position = this._pointerPositions[ event.pointerId ];\n\n\t\tif ( position === undefined ) {\n\n\t\t\tposition = new Vector2();\n\t\t\tthis._pointerPositions[ event.pointerId ] = position;\n\n\t\t}\n\n\t\tposition.set( event.pageX, event.pageY );\n\n\t}\n\n\t_getSecondPointerPosition( event ) {\n\n\t\tconst pointerId = ( event.pointerId === this._pointers[ 0 ] ) ? this._pointers[ 1 ] : this._pointers[ 0 ];\n\n\t\treturn this._pointerPositions[ pointerId ];\n\n\t}\n\n\t//\n\n\t_customWheelEvent( event ) {\n\n\t\tconst mode = event.deltaMode;\n\n\t\t// minimal wheel event altered to meet delta-zoom demand\n\t\tconst newEvent = {\n\t\t\tclientX: event.clientX,\n\t\t\tclientY: event.clientY,\n\t\t\tdeltaY: event.deltaY,\n\t\t};\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase 1: // LINE_MODE\n\t\t\t\tnewEvent.deltaY *= 16;\n\t\t\t\tbreak;\n\n\t\t\tcase 2: // PAGE_MODE\n\t\t\t\tnewEvent.deltaY *= 100;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\t// detect if event was triggered by pinching\n\t\tif ( event.ctrlKey && ! this._controlActive ) {\n\n\t\t\tnewEvent.deltaY *= 10;\n\n\t\t}\n\n\t\treturn newEvent;\n\n\t}\n\n}\n\nfunction onPointerDown( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tif ( this._pointers.length === 0 ) {\n\n\t\tthis.domElement.setPointerCapture( event.pointerId );\n\n\t\tthis.domElement.addEventListener( 'pointermove', this._onPointerMove );\n\t\tthis.domElement.addEventListener( 'pointerup', this._onPointerUp );\n\n\t}\n\n\t//\n\n\tif ( this._isTrackingPointer( event ) ) return;\n\n\t//\n\n\tthis._addPointer( event );\n\n\tif ( event.pointerType === 'touch' ) {\n\n\t\tthis._onTouchStart( event );\n\n\t} else {\n\n\t\tthis._onMouseDown( event );\n\n\t}\n\n}\n\nfunction onPointerMove( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tif ( event.pointerType === 'touch' ) {\n\n\t\tthis._onTouchMove( event );\n\n\t} else {\n\n\t\tthis._onMouseMove( event );\n\n\t}\n\n}\n\nfunction onPointerUp( event ) {\n\n\tthis._removePointer( event );\n\n\tswitch ( this._pointers.length ) {\n\n\t\tcase 0:\n\n\t\t\tthis.domElement.releasePointerCapture( event.pointerId );\n\n\t\t\tthis.domElement.removeEventListener( 'pointermove', this._onPointerMove );\n\t\t\tthis.domElement.removeEventListener( 'pointerup', this._onPointerUp );\n\n\t\t\tthis.dispatchEvent( _endEvent );\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t\t\tbreak;\n\n\t\tcase 1:\n\n\t\t\tconst pointerId = this._pointers[ 0 ];\n\t\t\tconst position = this._pointerPositions[ pointerId ];\n\n\t\t\t// minimal placeholder event - allows state correction on pointer-up\n\t\t\tthis._onTouchStart( { pointerId: pointerId, pageX: position.x, pageY: position.y } );\n\n\t\t\tbreak;\n\n\t}\n\n}\n\nfunction onMouseDown( event ) {\n\n\tlet mouseAction;\n\n\tswitch ( event.button ) {\n\n\t\tcase 0:\n\n\t\t\tmouseAction = this.mouseButtons.LEFT;\n\t\t\tbreak;\n\n\t\tcase 1:\n\n\t\t\tmouseAction = this.mouseButtons.MIDDLE;\n\t\t\tbreak;\n\n\t\tcase 2:\n\n\t\t\tmouseAction = this.mouseButtons.RIGHT;\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tmouseAction = - 1;\n\n\t}\n\n\tswitch ( mouseAction ) {\n\n\t\tcase MOUSE.DOLLY:\n\n\t\t\tif ( this.enableZoom === false ) return;\n\n\t\t\tthis._handleMouseDownDolly( event );\n\n\t\t\tthis.state = _STATE.DOLLY;\n\n\t\t\tbreak;\n\n\t\tcase MOUSE.ROTATE:\n\n\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\t\tthis._handleMouseDownPan( event );\n\n\t\t\t\tthis.state = _STATE.PAN;\n\n\t\t\t} else {\n\n\t\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\t\tthis._handleMouseDownRotate( event );\n\n\t\t\t\tthis.state = _STATE.ROTATE;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase MOUSE.PAN:\n\n\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\t\tthis._handleMouseDownRotate( event );\n\n\t\t\t\tthis.state = _STATE.ROTATE;\n\n\t\t\t} else {\n\n\t\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\t\tthis._handleMouseDownPan( event );\n\n\t\t\t\tthis.state = _STATE.PAN;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t}\n\n\tif ( this.state !== _STATE.NONE ) {\n\n\t\tthis.dispatchEvent( _startEvent );\n\n\t}\n\n}\n\nfunction onMouseMove( event ) {\n\n\tswitch ( this.state ) {\n\n\t\tcase _STATE.ROTATE:\n\n\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\tthis._handleMouseMoveRotate( event );\n\n\t\t\tbreak;\n\n\t\tcase _STATE.DOLLY:\n\n\t\t\tif ( this.enableZoom === false ) return;\n\n\t\t\tthis._handleMouseMoveDolly( event );\n\n\t\t\tbreak;\n\n\t\tcase _STATE.PAN:\n\n\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\tthis._handleMouseMovePan( event );\n\n\t\t\tbreak;\n\n\t}\n\n}\n\nfunction onMouseWheel( event ) {\n\n\tif ( this.enabled === false || this.enableZoom === false || this.state !== _STATE.NONE ) return;\n\n\tevent.preventDefault();\n\n\tthis.dispatchEvent( _startEvent );\n\n\tthis._handleMouseWheel( this._customWheelEvent( event ) );\n\n\tthis.dispatchEvent( _endEvent );\n\n}\n\nfunction onKeyDown( event ) {\n\n\tif ( this.enabled === false || this.enablePan === false ) return;\n\n\tthis._handleKeyDown( event );\n\n}\n\nfunction onTouchStart( event ) {\n\n\tthis._trackPointer( event );\n\n\tswitch ( this._pointers.length ) {\n\n\t\tcase 1:\n\n\t\t\tswitch ( this.touches.ONE ) {\n\n\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartRotate( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_ROTATE;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartPan( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_PAN;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tthis.state = _STATE.NONE;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase 2:\n\n\t\t\tswitch ( this.touches.TWO ) {\n\n\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\tif ( this.enableZoom === false && this.enablePan === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartDollyPan( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\tif ( this.enableZoom === false && this.enableRotate === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartDollyRotate( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tthis.state = _STATE.NONE;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t}\n\n\tif ( this.state !== _STATE.NONE ) {\n\n\t\tthis.dispatchEvent( _startEvent );\n\n\t}\n\n}\n\nfunction onTouchMove( event ) {\n\n\tthis._trackPointer( event );\n\n\tswitch ( this.state ) {\n\n\t\tcase _STATE.TOUCH_ROTATE:\n\n\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\tthis._handleTouchMoveRotate( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tcase _STATE.TOUCH_PAN:\n\n\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\tthis._handleTouchMovePan( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tcase _STATE.TOUCH_DOLLY_PAN:\n\n\t\t\tif ( this.enableZoom === false && this.enablePan === false ) return;\n\n\t\t\tthis._handleTouchMoveDollyPan( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tcase _STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\tif ( this.enableZoom === false && this.enableRotate === false ) return;\n\n\t\t\tthis._handleTouchMoveDollyRotate( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t}\n\n}\n\nfunction onContextMenu( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tevent.preventDefault();\n\n}\n\nfunction interceptControlDown( event ) {\n\n\tif ( event.key === 'Control' ) {\n\n\t\tthis._controlActive = true;\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\tdocument.addEventListener( 'keyup', this._interceptControlUp, { passive: true, capture: true } );\n\n\t}\n\n}\n\nfunction interceptControlUp( event ) {\n\n\tif ( event.key === 'Control' ) {\n\n\t\tthis._controlActive = false;\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\tdocument.removeEventListener( 'keyup', this._interceptControlUp, { passive: true, capture: true } );\n\n\t}\n\n}\n\nexport { OrbitControls };\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 898, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 904, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/three/examples/jsm/postprocessing/Pass.js"],"sourcesContent":["import {\n\tBufferGeometry,\n\tFloat32BufferAttribute,\n\tOrthographicCamera,\n\tMesh\n} from 'three';\n\nclass Pass {\n\n\tconstructor() {\n\n\t\tthis.isPass = true;\n\n\t\t// if set to true, the pass is processed by the composer\n\t\tthis.enabled = true;\n\n\t\t// if set to true, the pass indicates to swap read and write buffer after rendering\n\t\tthis.needsSwap = true;\n\n\t\t// if set to true, the pass clears its buffer before rendering\n\t\tthis.clear = false;\n\n\t\t// if set to true, the result of the pass is rendered to screen. This is set automatically by EffectComposer.\n\t\tthis.renderToScreen = false;\n\n\t}\n\n\tsetSize( /* width, height */ ) {}\n\n\trender( /* renderer, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\n\n\t\tconsole.error( 'THREE.Pass: .render() must be implemented in derived pass.' );\n\n\t}\n\n\tdispose() {}\n\n}\n\n// Helper for passes that need to fill the viewport with a single quad.\n\nconst _camera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\n// https://github.com/mrdoob/three.js/pull/21358\n\nclass FullscreenTriangleGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( [ - 1, 3, 0, - 1, - 1, 0, 3, - 1, 0 ], 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( [ 0, 2, 0, 0, 2, 0 ], 2 ) );\n\n\t}\n\n}\n\nconst _geometry = new FullscreenTriangleGeometry();\n\nclass FullScreenQuad {\n\n\tconstructor( material ) {\n\n\t\tthis._mesh = new Mesh( _geometry, material );\n\n\t}\n\n\tdispose() {\n\n\t\tthis._mesh.geometry.dispose();\n\n\t}\n\n\trender( renderer ) {\n\n\t\trenderer.render( this._mesh, _camera );\n\n\t}\n\n\tget material() {\n\n\t\treturn this._mesh.material;\n\n\t}\n\n\tset material( value ) {\n\n\t\tthis._mesh.material = value;\n\n\t}\n\n}\n\nexport { Pass, FullScreenQuad };\n"],"names":[],"mappings":";;;;AAAA;;AAOA,MAAM;IAEL,aAAc;QAEb,IAAI,CAAC,MAAM,GAAG;QAEd,wDAAwD;QACxD,IAAI,CAAC,OAAO,GAAG;QAEf,mFAAmF;QACnF,IAAI,CAAC,SAAS,GAAG;QAEjB,8DAA8D;QAC9D,IAAI,CAAC,KAAK,GAAG;QAEb,6GAA6G;QAC7G,IAAI,CAAC,cAAc,GAAG;IAEvB;IAEA,UAA+B,CAAC;IAEhC,SAAyE;QAExE,QAAQ,KAAK,CAAE;IAEhB;IAEA,UAAU,CAAC;AAEZ;AAEA,uEAAuE;AAEvE,MAAM,UAAU,IAAI,iJAAA,CAAA,qBAAkB,CAAE,CAAE,GAAG,GAAG,GAAG,CAAE,GAAG,GAAG;AAE3D,gDAAgD;AAEhD,MAAM,mCAAmC,iJAAA,CAAA,iBAAc;IAEtD,aAAc;QAEb,KAAK;QAEL,IAAI,CAAC,YAAY,CAAE,YAAY,IAAI,iJAAA,CAAA,yBAAsB,CAAE;YAAE,CAAE;YAAG;YAAG;YAAG,CAAE;YAAG,CAAE;YAAG;YAAG;YAAG,CAAE;YAAG;SAAG,EAAE;QAClG,IAAI,CAAC,YAAY,CAAE,MAAM,IAAI,iJAAA,CAAA,yBAAsB,CAAE;YAAE;YAAG;YAAG;YAAG;YAAG;YAAG;SAAG,EAAE;IAE5E;AAED;AAEA,MAAM,YAAY,IAAI;AAEtB,MAAM;IAEL,YAAa,QAAQ,CAAG;QAEvB,IAAI,CAAC,KAAK,GAAG,IAAI,iJAAA,CAAA,OAAI,CAAE,WAAW;IAEnC;IAEA,UAAU;QAET,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO;IAE5B;IAEA,OAAQ,QAAQ,EAAG;QAElB,SAAS,MAAM,CAAE,IAAI,CAAC,KAAK,EAAE;IAE9B;IAEA,IAAI,WAAW;QAEd,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ;IAE3B;IAEA,IAAI,SAAU,KAAK,EAAG;QAErB,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG;IAEvB;AAED"}},
    {"offset": {"line": 974, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 980, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/three/examples/jsm/misc/GPUComputationRenderer.js"],"sourcesContent":["import {\n\tClampToEdgeWrapping,\n\tDataTexture,\n\tFloatType,\n\tNearestFilter,\n\tRGBAFormat,\n\tShaderMaterial,\n\tWebGLRenderTarget\n} from 'three';\n\nimport { FullScreenQuad } from '../postprocessing/Pass.js';\n\n/**\n * GPUComputationRenderer, based on SimulationRenderer by zz85\n *\n * The GPUComputationRenderer uses the concept of variables. These variables are RGBA float textures that hold 4 floats\n * for each compute element (texel)\n *\n * Each variable has a fragment shader that defines the computation made to obtain the variable in question.\n * You can use as many variables you need, and make dependencies so you can use textures of other variables in the shader\n * (the sampler uniforms are added automatically) Most of the variables will need themselves as dependency.\n *\n * The renderer has actually two render targets per variable, to make ping-pong. Textures from the current frame are used\n * as inputs to render the textures of the next frame.\n *\n * The render targets of the variables can be used as input textures for your visualization shaders.\n *\n * Variable names should be valid identifiers and should not collide with THREE GLSL used identifiers.\n * a common approach could be to use 'texture' prefixing the variable name; i.e texturePosition, textureVelocity...\n *\n * The size of the computation (sizeX * sizeY) is defined as 'resolution' automatically in the shader. For example:\n * #DEFINE resolution vec2( 1024.0, 1024.0 )\n *\n * -------------\n *\n * Basic use:\n *\n * // Initialization...\n *\n * // Create computation renderer\n * const gpuCompute = new GPUComputationRenderer( 1024, 1024, renderer );\n *\n * // Create initial state float textures\n * const pos0 = gpuCompute.createTexture();\n * const vel0 = gpuCompute.createTexture();\n * // and fill in here the texture data...\n *\n * // Add texture variables\n * const velVar = gpuCompute.addVariable( \"textureVelocity\", fragmentShaderVel, vel0 );\n * const posVar = gpuCompute.addVariable( \"texturePosition\", fragmentShaderPos, pos0 );\n *\n * // Add variable dependencies\n * gpuCompute.setVariableDependencies( velVar, [ velVar, posVar ] );\n * gpuCompute.setVariableDependencies( posVar, [ velVar, posVar ] );\n *\n * // Add custom uniforms\n * velVar.material.uniforms.time = { value: 0.0 };\n *\n * // Check for completeness\n * const error = gpuCompute.init();\n * if ( error !== null ) {\n *\t\tconsole.error( error );\n  * }\n *\n *\n * // In each frame...\n *\n * // Compute!\n * gpuCompute.compute();\n *\n * // Update texture uniforms in your visualization materials with the gpu renderer output\n * myMaterial.uniforms.myTexture.value = gpuCompute.getCurrentRenderTarget( posVar ).texture;\n *\n * // Do your rendering\n * renderer.render( myScene, myCamera );\n *\n * -------------\n *\n * Also, you can use utility functions to create ShaderMaterial and perform computations (rendering between textures)\n * Note that the shaders can have multiple input textures.\n *\n * const myFilter1 = gpuCompute.createShaderMaterial( myFilterFragmentShader1, { theTexture: { value: null } } );\n * const myFilter2 = gpuCompute.createShaderMaterial( myFilterFragmentShader2, { theTexture: { value: null } } );\n *\n * const inputTexture = gpuCompute.createTexture();\n *\n * // Fill in here inputTexture...\n *\n * myFilter1.uniforms.theTexture.value = inputTexture;\n *\n * const myRenderTarget = gpuCompute.createRenderTarget();\n * myFilter2.uniforms.theTexture.value = myRenderTarget.texture;\n *\n * const outputRenderTarget = gpuCompute.createRenderTarget();\n *\n * // Now use the output texture where you want:\n * myMaterial.uniforms.map.value = outputRenderTarget.texture;\n *\n * // And compute each frame, before rendering to screen:\n * gpuCompute.doRenderTarget( myFilter1, myRenderTarget );\n * gpuCompute.doRenderTarget( myFilter2, outputRenderTarget );\n *\n *\n *\n * @param {int} sizeX Computation problem size is always 2d: sizeX * sizeY elements.\n * @param {int} sizeY Computation problem size is always 2d: sizeX * sizeY elements.\n * @param {WebGLRenderer} renderer The renderer\n  */\n\nclass GPUComputationRenderer {\n\n\tconstructor( sizeX, sizeY, renderer ) {\n\n\t\tthis.variables = [];\n\n\t\tthis.currentTextureIndex = 0;\n\n\t\tlet dataType = FloatType;\n\n\t\tconst passThruUniforms = {\n\t\t\tpassThruTexture: { value: null }\n\t\t};\n\n\t\tconst passThruShader = createShaderMaterial( getPassThroughFragmentShader(), passThruUniforms );\n\n\t\tconst quad = new FullScreenQuad( passThruShader );\n\n\t\tthis.setDataType = function ( type ) {\n\n\t\t\tdataType = type;\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addVariable = function ( variableName, computeFragmentShader, initialValueTexture ) {\n\n\t\t\tconst material = this.createShaderMaterial( computeFragmentShader );\n\n\t\t\tconst variable = {\n\t\t\t\tname: variableName,\n\t\t\t\tinitialValueTexture: initialValueTexture,\n\t\t\t\tmaterial: material,\n\t\t\t\tdependencies: null,\n\t\t\t\trenderTargets: [],\n\t\t\t\twrapS: null,\n\t\t\t\twrapT: null,\n\t\t\t\tminFilter: NearestFilter,\n\t\t\t\tmagFilter: NearestFilter\n\t\t\t};\n\n\t\t\tthis.variables.push( variable );\n\n\t\t\treturn variable;\n\n\t\t};\n\n\t\tthis.setVariableDependencies = function ( variable, dependencies ) {\n\n\t\t\tvariable.dependencies = dependencies;\n\n\t\t};\n\n\t\tthis.init = function () {\n\n\t\t\tif ( renderer.capabilities.maxVertexTextures === 0 ) {\n\n\t\t\t\treturn 'No support for vertex shader textures.';\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0; i < this.variables.length; i ++ ) {\n\n\t\t\t\tconst variable = this.variables[ i ];\n\n\t\t\t\t// Creates rendertargets and initialize them with input texture\n\t\t\t\tvariable.renderTargets[ 0 ] = this.createRenderTarget( sizeX, sizeY, variable.wrapS, variable.wrapT, variable.minFilter, variable.magFilter );\n\t\t\t\tvariable.renderTargets[ 1 ] = this.createRenderTarget( sizeX, sizeY, variable.wrapS, variable.wrapT, variable.minFilter, variable.magFilter );\n\t\t\t\tthis.renderTexture( variable.initialValueTexture, variable.renderTargets[ 0 ] );\n\t\t\t\tthis.renderTexture( variable.initialValueTexture, variable.renderTargets[ 1 ] );\n\n\t\t\t\t// Adds dependencies uniforms to the ShaderMaterial\n\t\t\t\tconst material = variable.material;\n\t\t\t\tconst uniforms = material.uniforms;\n\n\t\t\t\tif ( variable.dependencies !== null ) {\n\n\t\t\t\t\tfor ( let d = 0; d < variable.dependencies.length; d ++ ) {\n\n\t\t\t\t\t\tconst depVar = variable.dependencies[ d ];\n\n\t\t\t\t\t\tif ( depVar.name !== variable.name ) {\n\n\t\t\t\t\t\t\t// Checks if variable exists\n\t\t\t\t\t\t\tlet found = false;\n\n\t\t\t\t\t\t\tfor ( let j = 0; j < this.variables.length; j ++ ) {\n\n\t\t\t\t\t\t\t\tif ( depVar.name === this.variables[ j ].name ) {\n\n\t\t\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( ! found ) {\n\n\t\t\t\t\t\t\t\treturn 'Variable dependency not found. Variable=' + variable.name + ', dependency=' + depVar.name;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tuniforms[ depVar.name ] = { value: null };\n\n\t\t\t\t\t\tmaterial.fragmentShader = '\\nuniform sampler2D ' + depVar.name + ';\\n' + material.fragmentShader;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.currentTextureIndex = 0;\n\n\t\t\treturn null;\n\n\t\t};\n\n\t\tthis.compute = function () {\n\n\t\t\tconst currentTextureIndex = this.currentTextureIndex;\n\t\t\tconst nextTextureIndex = this.currentTextureIndex === 0 ? 1 : 0;\n\n\t\t\tfor ( let i = 0, il = this.variables.length; i < il; i ++ ) {\n\n\t\t\t\tconst variable = this.variables[ i ];\n\n\t\t\t\t// Sets texture dependencies uniforms\n\t\t\t\tif ( variable.dependencies !== null ) {\n\n\t\t\t\t\tconst uniforms = variable.material.uniforms;\n\n\t\t\t\t\tfor ( let d = 0, dl = variable.dependencies.length; d < dl; d ++ ) {\n\n\t\t\t\t\t\tconst depVar = variable.dependencies[ d ];\n\n\t\t\t\t\t\tuniforms[ depVar.name ].value = depVar.renderTargets[ currentTextureIndex ].texture;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Performs the computation for this variable\n\t\t\t\tthis.doRenderTarget( variable.material, variable.renderTargets[ nextTextureIndex ] );\n\n\t\t\t}\n\n\t\t\tthis.currentTextureIndex = nextTextureIndex;\n\n\t\t};\n\n\t\tthis.getCurrentRenderTarget = function ( variable ) {\n\n\t\t\treturn variable.renderTargets[ this.currentTextureIndex ];\n\n\t\t};\n\n\t\tthis.getAlternateRenderTarget = function ( variable ) {\n\n\t\t\treturn variable.renderTargets[ this.currentTextureIndex === 0 ? 1 : 0 ];\n\n\t\t};\n\n\t\tthis.dispose = function () {\n\n\t\t\tquad.dispose();\n\n\t\t\tconst variables = this.variables;\n\n\t\t\tfor ( let i = 0; i < variables.length; i ++ ) {\n\n\t\t\t\tconst variable = variables[ i ];\n\n\t\t\t\tif ( variable.initialValueTexture ) variable.initialValueTexture.dispose();\n\n\t\t\t\tconst renderTargets = variable.renderTargets;\n\n\t\t\t\tfor ( let j = 0; j < renderTargets.length; j ++ ) {\n\n\t\t\t\t\tconst renderTarget = renderTargets[ j ];\n\t\t\t\t\trenderTarget.dispose();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction addResolutionDefine( materialShader ) {\n\n\t\t\tmaterialShader.defines.resolution = 'vec2( ' + sizeX.toFixed( 1 ) + ', ' + sizeY.toFixed( 1 ) + ' )';\n\n\t\t}\n\n\t\tthis.addResolutionDefine = addResolutionDefine;\n\n\n\t\t// The following functions can be used to compute things manually\n\n\t\tfunction createShaderMaterial( computeFragmentShader, uniforms ) {\n\n\t\t\tuniforms = uniforms || {};\n\n\t\t\tconst material = new ShaderMaterial( {\n\t\t\t\tname: 'GPUComputationShader',\n\t\t\t\tuniforms: uniforms,\n\t\t\t\tvertexShader: getPassThroughVertexShader(),\n\t\t\t\tfragmentShader: computeFragmentShader\n\t\t\t} );\n\n\t\t\taddResolutionDefine( material );\n\n\t\t\treturn material;\n\n\t\t}\n\n\t\tthis.createShaderMaterial = createShaderMaterial;\n\n\t\tthis.createRenderTarget = function ( sizeXTexture, sizeYTexture, wrapS, wrapT, minFilter, magFilter ) {\n\n\t\t\tsizeXTexture = sizeXTexture || sizeX;\n\t\t\tsizeYTexture = sizeYTexture || sizeY;\n\n\t\t\twrapS = wrapS || ClampToEdgeWrapping;\n\t\t\twrapT = wrapT || ClampToEdgeWrapping;\n\n\t\t\tminFilter = minFilter || NearestFilter;\n\t\t\tmagFilter = magFilter || NearestFilter;\n\n\t\t\tconst renderTarget = new WebGLRenderTarget( sizeXTexture, sizeYTexture, {\n\t\t\t\twrapS: wrapS,\n\t\t\t\twrapT: wrapT,\n\t\t\t\tminFilter: minFilter,\n\t\t\t\tmagFilter: magFilter,\n\t\t\t\tformat: RGBAFormat,\n\t\t\t\ttype: dataType,\n\t\t\t\tdepthBuffer: false\n\t\t\t} );\n\n\t\t\treturn renderTarget;\n\n\t\t};\n\n\t\tthis.createTexture = function () {\n\n\t\t\tconst data = new Float32Array( sizeX * sizeY * 4 );\n\t\t\tconst texture = new DataTexture( data, sizeX, sizeY, RGBAFormat, FloatType );\n\t\t\ttexture.needsUpdate = true;\n\t\t\treturn texture;\n\n\t\t};\n\n\t\tthis.renderTexture = function ( input, output ) {\n\n\t\t\t// Takes a texture, and render out in rendertarget\n\t\t\t// input = Texture\n\t\t\t// output = RenderTarget\n\n\t\t\tpassThruUniforms.passThruTexture.value = input;\n\n\t\t\tthis.doRenderTarget( passThruShader, output );\n\n\t\t\tpassThruUniforms.passThruTexture.value = null;\n\n\t\t};\n\n\t\tthis.doRenderTarget = function ( material, output ) {\n\n\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\tconst currentXrEnabled = renderer.xr.enabled;\n\t\t\tconst currentShadowAutoUpdate = renderer.shadowMap.autoUpdate;\n\n\t\t\trenderer.xr.enabled = false; // Avoid camera modification\n\t\t\trenderer.shadowMap.autoUpdate = false; // Avoid re-computing shadows\n\t\t\tquad.material = material;\n\t\t\trenderer.setRenderTarget( output );\n\t\t\tquad.render( renderer );\n\t\t\tquad.material = passThruShader;\n\n\t\t\trenderer.xr.enabled = currentXrEnabled;\n\t\t\trenderer.shadowMap.autoUpdate = currentShadowAutoUpdate;\n\n\t\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\t};\n\n\t\t// Shaders\n\n\t\tfunction getPassThroughVertexShader() {\n\n\t\t\treturn\t'void main()\t{\\n' +\n\t\t\t\t\t'\\n' +\n\t\t\t\t\t'\tgl_Position = vec4( position, 1.0 );\\n' +\n\t\t\t\t\t'\\n' +\n\t\t\t\t\t'}\\n';\n\n\t\t}\n\n\t\tfunction getPassThroughFragmentShader() {\n\n\t\t\treturn\t'uniform sampler2D passThruTexture;\\n' +\n\t\t\t\t\t'\\n' +\n\t\t\t\t\t'void main() {\\n' +\n\t\t\t\t\t'\\n' +\n\t\t\t\t\t'\tvec2 uv = gl_FragCoord.xy / resolution.xy;\\n' +\n\t\t\t\t\t'\\n' +\n\t\t\t\t\t'\tgl_FragColor = texture2D( passThruTexture, uv );\\n' +\n\t\t\t\t\t'\\n' +\n\t\t\t\t\t'}\\n';\n\n\t\t}\n\n\t}\n\n}\n\nexport { GPUComputationRenderer };\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1267, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1273, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/three/examples/jsm/postprocessing/RenderPass.js"],"sourcesContent":["import {\n\tColor\n} from 'three';\nimport { Pass } from './Pass.js';\n\nclass RenderPass extends Pass {\n\n\tconstructor( scene, camera, overrideMaterial = null, clearColor = null, clearAlpha = null ) {\n\n\t\tsuper();\n\n\t\tthis.scene = scene;\n\t\tthis.camera = camera;\n\n\t\tthis.overrideMaterial = overrideMaterial;\n\n\t\tthis.clearColor = clearColor;\n\t\tthis.clearAlpha = clearAlpha;\n\n\t\tthis.clear = true;\n\t\tthis.clearDepth = false;\n\t\tthis.needsSwap = false;\n\t\tthis._oldClearColor = new Color();\n\n\t}\n\n\trender( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tconst oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tlet oldClearAlpha, oldOverrideMaterial;\n\n\t\tif ( this.overrideMaterial !== null ) {\n\n\t\t\toldOverrideMaterial = this.scene.overrideMaterial;\n\n\t\t\tthis.scene.overrideMaterial = this.overrideMaterial;\n\n\t\t}\n\n\t\tif ( this.clearColor !== null ) {\n\n\t\t\trenderer.getClearColor( this._oldClearColor );\n\t\t\trenderer.setClearColor( this.clearColor, renderer.getClearAlpha() );\n\n\t\t}\n\n\t\tif ( this.clearAlpha !== null ) {\n\n\t\t\toldClearAlpha = renderer.getClearAlpha();\n\t\t\trenderer.setClearAlpha( this.clearAlpha );\n\n\t\t}\n\n\t\tif ( this.clearDepth == true ) {\n\n\t\t\trenderer.clearDepth();\n\n\t\t}\n\n\t\trenderer.setRenderTarget( this.renderToScreen ? null : readBuffer );\n\n\t\tif ( this.clear === true ) {\n\n\t\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\trenderer.render( this.scene, this.camera );\n\n\t\t// restore\n\n\t\tif ( this.clearColor !== null ) {\n\n\t\t\trenderer.setClearColor( this._oldClearColor );\n\n\t\t}\n\n\t\tif ( this.clearAlpha !== null ) {\n\n\t\t\trenderer.setClearAlpha( oldClearAlpha );\n\n\t\t}\n\n\t\tif ( this.overrideMaterial !== null ) {\n\n\t\t\tthis.scene.overrideMaterial = oldOverrideMaterial;\n\n\t\t}\n\n\t\trenderer.autoClear = oldAutoClear;\n\n\t}\n\n}\n\nexport { RenderPass };\n"],"names":[],"mappings":";;;AAAA;AAGA;;;AAEA,MAAM,mBAAmB,kKAAA,CAAA,OAAI;IAE5B,YAAa,KAAK,EAAE,MAAM,EAAE,mBAAmB,IAAI,EAAE,aAAa,IAAI,EAAE,aAAa,IAAI,CAAG;QAE3F,KAAK;QAEL,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,MAAM,GAAG;QAEd,IAAI,CAAC,gBAAgB,GAAG;QAExB,IAAI,CAAC,UAAU,GAAG;QAClB,IAAI,CAAC,UAAU,GAAG;QAElB,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,UAAU,GAAG;QAClB,IAAI,CAAC,SAAS,GAAG;QACjB,IAAI,CAAC,cAAc,GAAG,IAAI,iJAAA,CAAA,QAAK;IAEhC;IAEA,OAAQ,QAAQ,EAAE,WAAW,EAAE,WAAW,0BAA0B,GAA3B,EAAgC;QAExE,MAAM,eAAe,SAAS,SAAS;QACvC,SAAS,SAAS,GAAG;QAErB,IAAI,eAAe;QAEnB,IAAK,IAAI,CAAC,gBAAgB,KAAK,MAAO;YAErC,sBAAsB,IAAI,CAAC,KAAK,CAAC,gBAAgB;YAEjD,IAAI,CAAC,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB;QAEpD;QAEA,IAAK,IAAI,CAAC,UAAU,KAAK,MAAO;YAE/B,SAAS,aAAa,CAAE,IAAI,CAAC,cAAc;YAC3C,SAAS,aAAa,CAAE,IAAI,CAAC,UAAU,EAAE,SAAS,aAAa;QAEhE;QAEA,IAAK,IAAI,CAAC,UAAU,KAAK,MAAO;YAE/B,gBAAgB,SAAS,aAAa;YACtC,SAAS,aAAa,CAAE,IAAI,CAAC,UAAU;QAExC;QAEA,IAAK,IAAI,CAAC,UAAU,IAAI,MAAO;YAE9B,SAAS,UAAU;QAEpB;QAEA,SAAS,eAAe,CAAE,IAAI,CAAC,cAAc,GAAG,OAAO;QAEvD,IAAK,IAAI,CAAC,KAAK,KAAK,MAAO;YAE1B,mHAAmH;YACnH,SAAS,KAAK,CAAE,SAAS,cAAc,EAAE,SAAS,cAAc,EAAE,SAAS,gBAAgB;QAE5F;QAEA,SAAS,MAAM,CAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM;QAExC,UAAU;QAEV,IAAK,IAAI,CAAC,UAAU,KAAK,MAAO;YAE/B,SAAS,aAAa,CAAE,IAAI,CAAC,cAAc;QAE5C;QAEA,IAAK,IAAI,CAAC,UAAU,KAAK,MAAO;YAE/B,SAAS,aAAa,CAAE;QAEzB;QAEA,IAAK,IAAI,CAAC,gBAAgB,KAAK,MAAO;YAErC,IAAI,CAAC,KAAK,CAAC,gBAAgB,GAAG;QAE/B;QAEA,SAAS,SAAS,GAAG;IAEtB;AAED"}},
    {"offset": {"line": 1332, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1338, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/three/examples/jsm/shaders/LuminosityHighPassShader.js"],"sourcesContent":["import {\n\tColor\n} from 'three';\n\n/**\n * Luminosity\n * http://en.wikipedia.org/wiki/Luminosity\n */\n\nconst LuminosityHighPassShader = {\n\n\tname: 'LuminosityHighPassShader',\n\n\tshaderID: 'luminosityHighPass',\n\n\tuniforms: {\n\n\t\t'tDiffuse': { value: null },\n\t\t'luminosityThreshold': { value: 1.0 },\n\t\t'smoothWidth': { value: 1.0 },\n\t\t'defaultColor': { value: new Color( 0x000000 ) },\n\t\t'defaultOpacity': { value: 0.0 }\n\n\t},\n\n\tvertexShader: /* glsl */`\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}`,\n\n\tfragmentShader: /* glsl */`\n\n\t\tuniform sampler2D tDiffuse;\n\t\tuniform vec3 defaultColor;\n\t\tuniform float defaultOpacity;\n\t\tuniform float luminosityThreshold;\n\t\tuniform float smoothWidth;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec4 texel = texture2D( tDiffuse, vUv );\n\n\t\t\tfloat v = luminance( texel.xyz );\n\n\t\t\tvec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );\n\n\t\t\tfloat alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );\n\n\t\t\tgl_FragColor = mix( outputColor, texel, alpha );\n\n\t\t}`\n\n};\n\nexport { LuminosityHighPassShader };\n"],"names":[],"mappings":";;;AAAA;;AAIA;;;CAGC,GAED,MAAM,2BAA2B;IAEhC,MAAM;IAEN,UAAU;IAEV,UAAU;QAET,YAAY;YAAE,OAAO;QAAK;QAC1B,uBAAuB;YAAE,OAAO;QAAI;QACpC,eAAe;YAAE,OAAO;QAAI;QAC5B,gBAAgB;YAAE,OAAO,IAAI,iJAAA,CAAA,QAAK,CAAE;QAAW;QAC/C,kBAAkB;YAAE,OAAO;QAAI;IAEhC;IAEA,cAAc,QAAQ,GAAE,CAAC;;;;;;;;;;GAUvB,CAAC;IAEH,gBAAgB,QAAQ,GAAE,CAAC;;;;;;;;;;;;;;;;;;;;;;GAsBzB,CAAC;AAEJ"}},
    {"offset": {"line": 1402, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1408, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/three/examples/jsm/shaders/CopyShader.js"],"sourcesContent":["/**\n * Full-screen textured quad shader\n */\n\nconst CopyShader = {\n\n\tname: 'CopyShader',\n\n\tuniforms: {\n\n\t\t'tDiffuse': { value: null },\n\t\t'opacity': { value: 1.0 }\n\n\t},\n\n\tvertexShader: /* glsl */`\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}`,\n\n\tfragmentShader: /* glsl */`\n\n\t\tuniform float opacity;\n\n\t\tuniform sampler2D tDiffuse;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec4 texel = texture2D( tDiffuse, vUv );\n\t\t\tgl_FragColor = opacity * texel;\n\n\n\t\t}`\n\n};\n\nexport { CopyShader };\n"],"names":[],"mappings":"AAAA;;CAEC;;;AAED,MAAM,aAAa;IAElB,MAAM;IAEN,UAAU;QAET,YAAY;YAAE,OAAO;QAAK;QAC1B,WAAW;YAAE,OAAO;QAAI;IAEzB;IAEA,cAAc,QAAQ,GAAE,CAAC;;;;;;;;;GASvB,CAAC;IAEH,gBAAgB,QAAQ,GAAE,CAAC;;;;;;;;;;;;;;GAczB,CAAC;AAEJ"}},
    {"offset": {"line": 1450, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1456, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/three/examples/jsm/postprocessing/UnrealBloomPass.js"],"sourcesContent":["import {\n\tAdditiveBlending,\n\tColor,\n\tHalfFloatType,\n\tMeshBasicMaterial,\n\tShaderMaterial,\n\tUniformsUtils,\n\tVector2,\n\tVector3,\n\tWebGLRenderTarget\n} from 'three';\nimport { Pass, FullScreenQuad } from './Pass.js';\nimport { CopyShader } from '../shaders/CopyShader.js';\nimport { LuminosityHighPassShader } from '../shaders/LuminosityHighPassShader.js';\n\n/**\n * UnrealBloomPass is inspired by the bloom pass of Unreal Engine. It creates a\n * mip map chain of bloom textures and blurs them with different radii. Because\n * of the weighted combination of mips, and because larger blurs are done on\n * higher mips, this effect provides good quality and performance.\n *\n * Reference:\n * - https://docs.unrealengine.com/latest/INT/Engine/Rendering/PostProcessEffects/Bloom/\n */\nclass UnrealBloomPass extends Pass {\n\n\tconstructor( resolution, strength, radius, threshold ) {\n\n\t\tsuper();\n\n\t\tthis.strength = ( strength !== undefined ) ? strength : 1;\n\t\tthis.radius = radius;\n\t\tthis.threshold = threshold;\n\t\tthis.resolution = ( resolution !== undefined ) ? new Vector2( resolution.x, resolution.y ) : new Vector2( 256, 256 );\n\n\t\t// create color only once here, reuse it later inside the render function\n\t\tthis.clearColor = new Color( 0, 0, 0 );\n\n\t\t// render targets\n\t\tthis.renderTargetsHorizontal = [];\n\t\tthis.renderTargetsVertical = [];\n\t\tthis.nMips = 5;\n\t\tlet resx = Math.round( this.resolution.x / 2 );\n\t\tlet resy = Math.round( this.resolution.y / 2 );\n\n\t\tthis.renderTargetBright = new WebGLRenderTarget( resx, resy, { type: HalfFloatType } );\n\t\tthis.renderTargetBright.texture.name = 'UnrealBloomPass.bright';\n\t\tthis.renderTargetBright.texture.generateMipmaps = false;\n\n\t\tfor ( let i = 0; i < this.nMips; i ++ ) {\n\n\t\t\tconst renderTargetHorizontal = new WebGLRenderTarget( resx, resy, { type: HalfFloatType } );\n\n\t\t\trenderTargetHorizontal.texture.name = 'UnrealBloomPass.h' + i;\n\t\t\trenderTargetHorizontal.texture.generateMipmaps = false;\n\n\t\t\tthis.renderTargetsHorizontal.push( renderTargetHorizontal );\n\n\t\t\tconst renderTargetVertical = new WebGLRenderTarget( resx, resy, { type: HalfFloatType } );\n\n\t\t\trenderTargetVertical.texture.name = 'UnrealBloomPass.v' + i;\n\t\t\trenderTargetVertical.texture.generateMipmaps = false;\n\n\t\t\tthis.renderTargetsVertical.push( renderTargetVertical );\n\n\t\t\tresx = Math.round( resx / 2 );\n\n\t\t\tresy = Math.round( resy / 2 );\n\n\t\t}\n\n\t\t// luminosity high pass material\n\n\t\tconst highPassShader = LuminosityHighPassShader;\n\t\tthis.highPassUniforms = UniformsUtils.clone( highPassShader.uniforms );\n\n\t\tthis.highPassUniforms[ 'luminosityThreshold' ].value = threshold;\n\t\tthis.highPassUniforms[ 'smoothWidth' ].value = 0.01;\n\n\t\tthis.materialHighPassFilter = new ShaderMaterial( {\n\t\t\tuniforms: this.highPassUniforms,\n\t\t\tvertexShader: highPassShader.vertexShader,\n\t\t\tfragmentShader: highPassShader.fragmentShader\n\t\t} );\n\n\t\t// gaussian blur materials\n\n\t\tthis.separableBlurMaterials = [];\n\t\tconst kernelSizeArray = [ 3, 5, 7, 9, 11 ];\n\t\tresx = Math.round( this.resolution.x / 2 );\n\t\tresy = Math.round( this.resolution.y / 2 );\n\n\t\tfor ( let i = 0; i < this.nMips; i ++ ) {\n\n\t\t\tthis.separableBlurMaterials.push( this.getSeperableBlurMaterial( kernelSizeArray[ i ] ) );\n\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ 'invSize' ].value = new Vector2( 1 / resx, 1 / resy );\n\n\t\t\tresx = Math.round( resx / 2 );\n\n\t\t\tresy = Math.round( resy / 2 );\n\n\t\t}\n\n\t\t// composite material\n\n\t\tthis.compositeMaterial = this.getCompositeMaterial( this.nMips );\n\t\tthis.compositeMaterial.uniforms[ 'blurTexture1' ].value = this.renderTargetsVertical[ 0 ].texture;\n\t\tthis.compositeMaterial.uniforms[ 'blurTexture2' ].value = this.renderTargetsVertical[ 1 ].texture;\n\t\tthis.compositeMaterial.uniforms[ 'blurTexture3' ].value = this.renderTargetsVertical[ 2 ].texture;\n\t\tthis.compositeMaterial.uniforms[ 'blurTexture4' ].value = this.renderTargetsVertical[ 3 ].texture;\n\t\tthis.compositeMaterial.uniforms[ 'blurTexture5' ].value = this.renderTargetsVertical[ 4 ].texture;\n\t\tthis.compositeMaterial.uniforms[ 'bloomStrength' ].value = strength;\n\t\tthis.compositeMaterial.uniforms[ 'bloomRadius' ].value = 0.1;\n\n\t\tconst bloomFactors = [ 1.0, 0.8, 0.6, 0.4, 0.2 ];\n\t\tthis.compositeMaterial.uniforms[ 'bloomFactors' ].value = bloomFactors;\n\t\tthis.bloomTintColors = [ new Vector3( 1, 1, 1 ), new Vector3( 1, 1, 1 ), new Vector3( 1, 1, 1 ), new Vector3( 1, 1, 1 ), new Vector3( 1, 1, 1 ) ];\n\t\tthis.compositeMaterial.uniforms[ 'bloomTintColors' ].value = this.bloomTintColors;\n\n\t\t// blend material\n\n\t\tconst copyShader = CopyShader;\n\n\t\tthis.copyUniforms = UniformsUtils.clone( copyShader.uniforms );\n\n\t\tthis.blendMaterial = new ShaderMaterial( {\n\t\t\tuniforms: this.copyUniforms,\n\t\t\tvertexShader: copyShader.vertexShader,\n\t\t\tfragmentShader: copyShader.fragmentShader,\n\t\t\tblending: AdditiveBlending,\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false,\n\t\t\ttransparent: true\n\t\t} );\n\n\t\tthis.enabled = true;\n\t\tthis.needsSwap = false;\n\n\t\tthis._oldClearColor = new Color();\n\t\tthis.oldClearAlpha = 1;\n\n\t\tthis.basic = new MeshBasicMaterial();\n\n\t\tthis.fsQuad = new FullScreenQuad( null );\n\n\t}\n\n\tdispose() {\n\n\t\tfor ( let i = 0; i < this.renderTargetsHorizontal.length; i ++ ) {\n\n\t\t\tthis.renderTargetsHorizontal[ i ].dispose();\n\n\t\t}\n\n\t\tfor ( let i = 0; i < this.renderTargetsVertical.length; i ++ ) {\n\n\t\t\tthis.renderTargetsVertical[ i ].dispose();\n\n\t\t}\n\n\t\tthis.renderTargetBright.dispose();\n\n\t\t//\n\n\t\tfor ( let i = 0; i < this.separableBlurMaterials.length; i ++ ) {\n\n\t\t\tthis.separableBlurMaterials[ i ].dispose();\n\n\t\t}\n\n\t\tthis.compositeMaterial.dispose();\n\t\tthis.blendMaterial.dispose();\n\t\tthis.basic.dispose();\n\n\t\t//\n\n\t\tthis.fsQuad.dispose();\n\n\t}\n\n\tsetSize( width, height ) {\n\n\t\tlet resx = Math.round( width / 2 );\n\t\tlet resy = Math.round( height / 2 );\n\n\t\tthis.renderTargetBright.setSize( resx, resy );\n\n\t\tfor ( let i = 0; i < this.nMips; i ++ ) {\n\n\t\t\tthis.renderTargetsHorizontal[ i ].setSize( resx, resy );\n\t\t\tthis.renderTargetsVertical[ i ].setSize( resx, resy );\n\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ 'invSize' ].value = new Vector2( 1 / resx, 1 / resy );\n\n\t\t\tresx = Math.round( resx / 2 );\n\t\t\tresy = Math.round( resy / 2 );\n\n\t\t}\n\n\t}\n\n\trender( renderer, writeBuffer, readBuffer, deltaTime, maskActive ) {\n\n\t\trenderer.getClearColor( this._oldClearColor );\n\t\tthis.oldClearAlpha = renderer.getClearAlpha();\n\t\tconst oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\trenderer.setClearColor( this.clearColor, 0 );\n\n\t\tif ( maskActive ) renderer.state.buffers.stencil.setTest( false );\n\n\t\t// Render input to screen\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\tthis.fsQuad.material = this.basic;\n\t\t\tthis.basic.map = readBuffer.texture;\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\trenderer.clear();\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t\t// 1. Extract Bright Areas\n\n\t\tthis.highPassUniforms[ 'tDiffuse' ].value = readBuffer.texture;\n\t\tthis.highPassUniforms[ 'luminosityThreshold' ].value = this.threshold;\n\t\tthis.fsQuad.material = this.materialHighPassFilter;\n\n\t\trenderer.setRenderTarget( this.renderTargetBright );\n\t\trenderer.clear();\n\t\tthis.fsQuad.render( renderer );\n\n\t\t// 2. Blur All the mips progressively\n\n\t\tlet inputRenderTarget = this.renderTargetBright;\n\n\t\tfor ( let i = 0; i < this.nMips; i ++ ) {\n\n\t\t\tthis.fsQuad.material = this.separableBlurMaterials[ i ];\n\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ 'colorTexture' ].value = inputRenderTarget.texture;\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ 'direction' ].value = UnrealBloomPass.BlurDirectionX;\n\t\t\trenderer.setRenderTarget( this.renderTargetsHorizontal[ i ] );\n\t\t\trenderer.clear();\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ 'colorTexture' ].value = this.renderTargetsHorizontal[ i ].texture;\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ 'direction' ].value = UnrealBloomPass.BlurDirectionY;\n\t\t\trenderer.setRenderTarget( this.renderTargetsVertical[ i ] );\n\t\t\trenderer.clear();\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t\tinputRenderTarget = this.renderTargetsVertical[ i ];\n\n\t\t}\n\n\t\t// Composite All the mips\n\n\t\tthis.fsQuad.material = this.compositeMaterial;\n\t\tthis.compositeMaterial.uniforms[ 'bloomStrength' ].value = this.strength;\n\t\tthis.compositeMaterial.uniforms[ 'bloomRadius' ].value = this.radius;\n\t\tthis.compositeMaterial.uniforms[ 'bloomTintColors' ].value = this.bloomTintColors;\n\n\t\trenderer.setRenderTarget( this.renderTargetsHorizontal[ 0 ] );\n\t\trenderer.clear();\n\t\tthis.fsQuad.render( renderer );\n\n\t\t// Blend it additively over the input texture\n\n\t\tthis.fsQuad.material = this.blendMaterial;\n\t\tthis.copyUniforms[ 'tDiffuse' ].value = this.renderTargetsHorizontal[ 0 ].texture;\n\n\t\tif ( maskActive ) renderer.state.buffers.stencil.setTest( true );\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget( readBuffer );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t\t// Restore renderer settings\n\n\t\trenderer.setClearColor( this._oldClearColor, this.oldClearAlpha );\n\t\trenderer.autoClear = oldAutoClear;\n\n\t}\n\n\tgetSeperableBlurMaterial( kernelRadius ) {\n\n\t\tconst coefficients = [];\n\n\t\tfor ( let i = 0; i < kernelRadius; i ++ ) {\n\n\t\t\tcoefficients.push( 0.39894 * Math.exp( - 0.5 * i * i / ( kernelRadius * kernelRadius ) ) / kernelRadius );\n\n\t\t}\n\n\t\treturn new ShaderMaterial( {\n\n\t\t\tdefines: {\n\t\t\t\t'KERNEL_RADIUS': kernelRadius\n\t\t\t},\n\n\t\t\tuniforms: {\n\t\t\t\t'colorTexture': { value: null },\n\t\t\t\t'invSize': { value: new Vector2( 0.5, 0.5 ) }, // inverse texture size\n\t\t\t\t'direction': { value: new Vector2( 0.5, 0.5 ) },\n\t\t\t\t'gaussianCoefficients': { value: coefficients } // precomputed Gaussian coefficients\n\t\t\t},\n\n\t\t\tvertexShader:\n\t\t\t\t`varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}`,\n\n\t\t\tfragmentShader:\n\t\t\t\t`#include <common>\n\t\t\t\tvarying vec2 vUv;\n\t\t\t\tuniform sampler2D colorTexture;\n\t\t\t\tuniform vec2 invSize;\n\t\t\t\tuniform vec2 direction;\n\t\t\t\tuniform float gaussianCoefficients[KERNEL_RADIUS];\n\n\t\t\t\tvoid main() {\n\t\t\t\t\tfloat weightSum = gaussianCoefficients[0];\n\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv ).rgb * weightSum;\n\t\t\t\t\tfor( int i = 1; i < KERNEL_RADIUS; i ++ ) {\n\t\t\t\t\t\tfloat x = float(i);\n\t\t\t\t\t\tfloat w = gaussianCoefficients[i];\n\t\t\t\t\t\tvec2 uvOffset = direction * invSize * x;\n\t\t\t\t\t\tvec3 sample1 = texture2D( colorTexture, vUv + uvOffset ).rgb;\n\t\t\t\t\t\tvec3 sample2 = texture2D( colorTexture, vUv - uvOffset ).rgb;\n\t\t\t\t\t\tdiffuseSum += (sample1 + sample2) * w;\n\t\t\t\t\t\tweightSum += 2.0 * w;\n\t\t\t\t\t}\n\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, 1.0);\n\t\t\t\t}`\n\t\t} );\n\n\t}\n\n\tgetCompositeMaterial( nMips ) {\n\n\t\treturn new ShaderMaterial( {\n\n\t\t\tdefines: {\n\t\t\t\t'NUM_MIPS': nMips\n\t\t\t},\n\n\t\t\tuniforms: {\n\t\t\t\t'blurTexture1': { value: null },\n\t\t\t\t'blurTexture2': { value: null },\n\t\t\t\t'blurTexture3': { value: null },\n\t\t\t\t'blurTexture4': { value: null },\n\t\t\t\t'blurTexture5': { value: null },\n\t\t\t\t'bloomStrength': { value: 1.0 },\n\t\t\t\t'bloomFactors': { value: null },\n\t\t\t\t'bloomTintColors': { value: null },\n\t\t\t\t'bloomRadius': { value: 0.0 }\n\t\t\t},\n\n\t\t\tvertexShader:\n\t\t\t\t`varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}`,\n\n\t\t\tfragmentShader:\n\t\t\t\t`varying vec2 vUv;\n\t\t\t\tuniform sampler2D blurTexture1;\n\t\t\t\tuniform sampler2D blurTexture2;\n\t\t\t\tuniform sampler2D blurTexture3;\n\t\t\t\tuniform sampler2D blurTexture4;\n\t\t\t\tuniform sampler2D blurTexture5;\n\t\t\t\tuniform float bloomStrength;\n\t\t\t\tuniform float bloomRadius;\n\t\t\t\tuniform float bloomFactors[NUM_MIPS];\n\t\t\t\tuniform vec3 bloomTintColors[NUM_MIPS];\n\n\t\t\t\tfloat lerpBloomFactor(const in float factor) {\n\t\t\t\t\tfloat mirrorFactor = 1.2 - factor;\n\t\t\t\t\treturn mix(factor, mirrorFactor, bloomRadius);\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\t\t\t\t\tgl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\n\t\t\t\t}`\n\t\t} );\n\n\t}\n\n}\n\nUnrealBloomPass.BlurDirectionX = new Vector2( 1.0, 0.0 );\nUnrealBloomPass.BlurDirectionY = new Vector2( 0.0, 1.0 );\n\nexport { UnrealBloomPass };\n"],"names":[],"mappings":";;;AAAA;AAaA;AADA;AADA;;;;;AAIA;;;;;;;;CAQC,GACD,MAAM,wBAAwB,kKAAA,CAAA,OAAI;IAEjC,YAAa,UAAU,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,CAAG;QAEtD,KAAK;QAEL,IAAI,CAAC,QAAQ,GAAG,AAAE,aAAa,YAAc,WAAW;QACxD,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,SAAS,GAAG;QACjB,IAAI,CAAC,UAAU,GAAG,AAAE,eAAe,YAAc,IAAI,iJAAA,CAAA,UAAO,CAAE,WAAW,CAAC,EAAE,WAAW,CAAC,IAAK,IAAI,iJAAA,CAAA,UAAO,CAAE,KAAK;QAE/G,yEAAyE;QACzE,IAAI,CAAC,UAAU,GAAG,IAAI,iJAAA,CAAA,QAAK,CAAE,GAAG,GAAG;QAEnC,iBAAiB;QACjB,IAAI,CAAC,uBAAuB,GAAG,EAAE;QACjC,IAAI,CAAC,qBAAqB,GAAG,EAAE;QAC/B,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,OAAO,KAAK,KAAK,CAAE,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG;QAC3C,IAAI,OAAO,KAAK,KAAK,CAAE,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG;QAE3C,IAAI,CAAC,kBAAkB,GAAG,IAAI,iJAAA,CAAA,oBAAiB,CAAE,MAAM,MAAM;YAAE,MAAM,iJAAA,CAAA,gBAAa;QAAC;QACnF,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,IAAI,GAAG;QACvC,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,eAAe,GAAG;QAElD,IAAM,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,KAAK,EAAE,IAAO;YAEvC,MAAM,yBAAyB,IAAI,iJAAA,CAAA,oBAAiB,CAAE,MAAM,MAAM;gBAAE,MAAM,iJAAA,CAAA,gBAAa;YAAC;YAExF,uBAAuB,OAAO,CAAC,IAAI,GAAG,sBAAsB;YAC5D,uBAAuB,OAAO,CAAC,eAAe,GAAG;YAEjD,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAE;YAEnC,MAAM,uBAAuB,IAAI,iJAAA,CAAA,oBAAiB,CAAE,MAAM,MAAM;gBAAE,MAAM,iJAAA,CAAA,gBAAa;YAAC;YAEtF,qBAAqB,OAAO,CAAC,IAAI,GAAG,sBAAsB;YAC1D,qBAAqB,OAAO,CAAC,eAAe,GAAG;YAE/C,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAE;YAEjC,OAAO,KAAK,KAAK,CAAE,OAAO;YAE1B,OAAO,KAAK,KAAK,CAAE,OAAO;QAE3B;QAEA,gCAAgC;QAEhC,MAAM,iBAAiB,+KAAA,CAAA,2BAAwB;QAC/C,IAAI,CAAC,gBAAgB,GAAG,iJAAA,CAAA,gBAAa,CAAC,KAAK,CAAE,eAAe,QAAQ;QAEpE,IAAI,CAAC,gBAAgB,CAAE,sBAAuB,CAAC,KAAK,GAAG;QACvD,IAAI,CAAC,gBAAgB,CAAE,cAAe,CAAC,KAAK,GAAG;QAE/C,IAAI,CAAC,sBAAsB,GAAG,IAAI,iJAAA,CAAA,iBAAc,CAAE;YACjD,UAAU,IAAI,CAAC,gBAAgB;YAC/B,cAAc,eAAe,YAAY;YACzC,gBAAgB,eAAe,cAAc;QAC9C;QAEA,0BAA0B;QAE1B,IAAI,CAAC,sBAAsB,GAAG,EAAE;QAChC,MAAM,kBAAkB;YAAE;YAAG;YAAG;YAAG;YAAG;SAAI;QAC1C,OAAO,KAAK,KAAK,CAAE,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG;QACvC,OAAO,KAAK,KAAK,CAAE,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG;QAEvC,IAAM,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,KAAK,EAAE,IAAO;YAEvC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAE,IAAI,CAAC,wBAAwB,CAAE,eAAe,CAAE,EAAG;YAErF,IAAI,CAAC,sBAAsB,CAAE,EAAG,CAAC,QAAQ,CAAE,UAAW,CAAC,KAAK,GAAG,IAAI,iJAAA,CAAA,UAAO,CAAE,IAAI,MAAM,IAAI;YAE1F,OAAO,KAAK,KAAK,CAAE,OAAO;YAE1B,OAAO,KAAK,KAAK,CAAE,OAAO;QAE3B;QAEA,qBAAqB;QAErB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,oBAAoB,CAAE,IAAI,CAAC,KAAK;QAC9D,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAE,eAAgB,CAAC,KAAK,GAAG,IAAI,CAAC,qBAAqB,CAAE,EAAG,CAAC,OAAO;QACjG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAE,eAAgB,CAAC,KAAK,GAAG,IAAI,CAAC,qBAAqB,CAAE,EAAG,CAAC,OAAO;QACjG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAE,eAAgB,CAAC,KAAK,GAAG,IAAI,CAAC,qBAAqB,CAAE,EAAG,CAAC,OAAO;QACjG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAE,eAAgB,CAAC,KAAK,GAAG,IAAI,CAAC,qBAAqB,CAAE,EAAG,CAAC,OAAO;QACjG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAE,eAAgB,CAAC,KAAK,GAAG,IAAI,CAAC,qBAAqB,CAAE,EAAG,CAAC,OAAO;QACjG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAE,gBAAiB,CAAC,KAAK,GAAG;QAC3D,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAE,cAAe,CAAC,KAAK,GAAG;QAEzD,MAAM,eAAe;YAAE;YAAK;YAAK;YAAK;YAAK;SAAK;QAChD,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAE,eAAgB,CAAC,KAAK,GAAG;QAC1D,IAAI,CAAC,eAAe,GAAG;YAAE,IAAI,iJAAA,CAAA,UAAO,CAAE,GAAG,GAAG;YAAK,IAAI,iJAAA,CAAA,UAAO,CAAE,GAAG,GAAG;YAAK,IAAI,iJAAA,CAAA,UAAO,CAAE,GAAG,GAAG;YAAK,IAAI,iJAAA,CAAA,UAAO,CAAE,GAAG,GAAG;YAAK,IAAI,iJAAA,CAAA,UAAO,CAAE,GAAG,GAAG;SAAK;QACjJ,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAE,kBAAmB,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe;QAEjF,iBAAiB;QAEjB,MAAM,aAAa,iKAAA,CAAA,aAAU;QAE7B,IAAI,CAAC,YAAY,GAAG,iJAAA,CAAA,gBAAa,CAAC,KAAK,CAAE,WAAW,QAAQ;QAE5D,IAAI,CAAC,aAAa,GAAG,IAAI,iJAAA,CAAA,iBAAc,CAAE;YACxC,UAAU,IAAI,CAAC,YAAY;YAC3B,cAAc,WAAW,YAAY;YACrC,gBAAgB,WAAW,cAAc;YACzC,UAAU,iJAAA,CAAA,mBAAgB;YAC1B,WAAW;YACX,YAAY;YACZ,aAAa;QACd;QAEA,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,SAAS,GAAG;QAEjB,IAAI,CAAC,cAAc,GAAG,IAAI,iJAAA,CAAA,QAAK;QAC/B,IAAI,CAAC,aAAa,GAAG;QAErB,IAAI,CAAC,KAAK,GAAG,IAAI,iJAAA,CAAA,oBAAiB;QAElC,IAAI,CAAC,MAAM,GAAG,IAAI,kKAAA,CAAA,iBAAc,CAAE;IAEnC;IAEA,UAAU;QAET,IAAM,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,uBAAuB,CAAC,MAAM,EAAE,IAAO;YAEhE,IAAI,CAAC,uBAAuB,CAAE,EAAG,CAAC,OAAO;QAE1C;QAEA,IAAM,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,IAAO;YAE9D,IAAI,CAAC,qBAAqB,CAAE,EAAG,CAAC,OAAO;QAExC;QAEA,IAAI,CAAC,kBAAkB,CAAC,OAAO;QAE/B,EAAE;QAEF,IAAM,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,sBAAsB,CAAC,MAAM,EAAE,IAAO;YAE/D,IAAI,CAAC,sBAAsB,CAAE,EAAG,CAAC,OAAO;QAEzC;QAEA,IAAI,CAAC,iBAAiB,CAAC,OAAO;QAC9B,IAAI,CAAC,aAAa,CAAC,OAAO;QAC1B,IAAI,CAAC,KAAK,CAAC,OAAO;QAElB,EAAE;QAEF,IAAI,CAAC,MAAM,CAAC,OAAO;IAEpB;IAEA,QAAS,KAAK,EAAE,MAAM,EAAG;QAExB,IAAI,OAAO,KAAK,KAAK,CAAE,QAAQ;QAC/B,IAAI,OAAO,KAAK,KAAK,CAAE,SAAS;QAEhC,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAE,MAAM;QAEvC,IAAM,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,KAAK,EAAE,IAAO;YAEvC,IAAI,CAAC,uBAAuB,CAAE,EAAG,CAAC,OAAO,CAAE,MAAM;YACjD,IAAI,CAAC,qBAAqB,CAAE,EAAG,CAAC,OAAO,CAAE,MAAM;YAE/C,IAAI,CAAC,sBAAsB,CAAE,EAAG,CAAC,QAAQ,CAAE,UAAW,CAAC,KAAK,GAAG,IAAI,iJAAA,CAAA,UAAO,CAAE,IAAI,MAAM,IAAI;YAE1F,OAAO,KAAK,KAAK,CAAE,OAAO;YAC1B,OAAO,KAAK,KAAK,CAAE,OAAO;QAE3B;IAED;IAEA,OAAQ,QAAQ,EAAE,WAAW,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAG;QAElE,SAAS,aAAa,CAAE,IAAI,CAAC,cAAc;QAC3C,IAAI,CAAC,aAAa,GAAG,SAAS,aAAa;QAC3C,MAAM,eAAe,SAAS,SAAS;QACvC,SAAS,SAAS,GAAG;QAErB,SAAS,aAAa,CAAE,IAAI,CAAC,UAAU,EAAE;QAEzC,IAAK,YAAa,SAAS,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAE;QAE1D,yBAAyB;QAEzB,IAAK,IAAI,CAAC,cAAc,EAAG;YAE1B,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK;YACjC,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,WAAW,OAAO;YAEnC,SAAS,eAAe,CAAE;YAC1B,SAAS,KAAK;YACd,IAAI,CAAC,MAAM,CAAC,MAAM,CAAE;QAErB;QAEA,0BAA0B;QAE1B,IAAI,CAAC,gBAAgB,CAAE,WAAY,CAAC,KAAK,GAAG,WAAW,OAAO;QAC9D,IAAI,CAAC,gBAAgB,CAAE,sBAAuB,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS;QACrE,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,sBAAsB;QAElD,SAAS,eAAe,CAAE,IAAI,CAAC,kBAAkB;QACjD,SAAS,KAAK;QACd,IAAI,CAAC,MAAM,CAAC,MAAM,CAAE;QAEpB,qCAAqC;QAErC,IAAI,oBAAoB,IAAI,CAAC,kBAAkB;QAE/C,IAAM,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,KAAK,EAAE,IAAO;YAEvC,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAE,EAAG;YAEvD,IAAI,CAAC,sBAAsB,CAAE,EAAG,CAAC,QAAQ,CAAE,eAAgB,CAAC,KAAK,GAAG,kBAAkB,OAAO;YAC7F,IAAI,CAAC,sBAAsB,CAAE,EAAG,CAAC,QAAQ,CAAE,YAAa,CAAC,KAAK,GAAG,gBAAgB,cAAc;YAC/F,SAAS,eAAe,CAAE,IAAI,CAAC,uBAAuB,CAAE,EAAG;YAC3D,SAAS,KAAK;YACd,IAAI,CAAC,MAAM,CAAC,MAAM,CAAE;YAEpB,IAAI,CAAC,sBAAsB,CAAE,EAAG,CAAC,QAAQ,CAAE,eAAgB,CAAC,KAAK,GAAG,IAAI,CAAC,uBAAuB,CAAE,EAAG,CAAC,OAAO;YAC7G,IAAI,CAAC,sBAAsB,CAAE,EAAG,CAAC,QAAQ,CAAE,YAAa,CAAC,KAAK,GAAG,gBAAgB,cAAc;YAC/F,SAAS,eAAe,CAAE,IAAI,CAAC,qBAAqB,CAAE,EAAG;YACzD,SAAS,KAAK;YACd,IAAI,CAAC,MAAM,CAAC,MAAM,CAAE;YAEpB,oBAAoB,IAAI,CAAC,qBAAqB,CAAE,EAAG;QAEpD;QAEA,yBAAyB;QAEzB,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB;QAC7C,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAE,gBAAiB,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ;QACxE,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAE,cAAe,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM;QACpE,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAE,kBAAmB,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe;QAEjF,SAAS,eAAe,CAAE,IAAI,CAAC,uBAAuB,CAAE,EAAG;QAC3D,SAAS,KAAK;QACd,IAAI,CAAC,MAAM,CAAC,MAAM,CAAE;QAEpB,6CAA6C;QAE7C,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa;QACzC,IAAI,CAAC,YAAY,CAAE,WAAY,CAAC,KAAK,GAAG,IAAI,CAAC,uBAAuB,CAAE,EAAG,CAAC,OAAO;QAEjF,IAAK,YAAa,SAAS,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAE;QAE1D,IAAK,IAAI,CAAC,cAAc,EAAG;YAE1B,SAAS,eAAe,CAAE;YAC1B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAE;QAErB,OAAO;YAEN,SAAS,eAAe,CAAE;YAC1B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAE;QAErB;QAEA,4BAA4B;QAE5B,SAAS,aAAa,CAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,aAAa;QAC/D,SAAS,SAAS,GAAG;IAEtB;IAEA,yBAA0B,YAAY,EAAG;QAExC,MAAM,eAAe,EAAE;QAEvB,IAAM,IAAI,IAAI,GAAG,IAAI,cAAc,IAAO;YAEzC,aAAa,IAAI,CAAE,UAAU,KAAK,GAAG,CAAE,CAAE,MAAM,IAAI,IAAI,CAAE,eAAe,YAAa,KAAM;QAE5F;QAEA,OAAO,IAAI,iJAAA,CAAA,iBAAc,CAAE;YAE1B,SAAS;gBACR,iBAAiB;YAClB;YAEA,UAAU;gBACT,gBAAgB;oBAAE,OAAO;gBAAK;gBAC9B,WAAW;oBAAE,OAAO,IAAI,iJAAA,CAAA,UAAO,CAAE,KAAK;gBAAM;gBAC5C,aAAa;oBAAE,OAAO,IAAI,iJAAA,CAAA,UAAO,CAAE,KAAK;gBAAM;gBAC9C,wBAAwB;oBAAE,OAAO;gBAAa,EAAE,oCAAoC;YACrF;YAEA,cACC,CAAC;;;;KAIA,CAAC;YAEH,gBACC,CAAC;;;;;;;;;;;;;;;;;;;;KAoBA,CAAC;QACJ;IAED;IAEA,qBAAsB,KAAK,EAAG;QAE7B,OAAO,IAAI,iJAAA,CAAA,iBAAc,CAAE;YAE1B,SAAS;gBACR,YAAY;YACb;YAEA,UAAU;gBACT,gBAAgB;oBAAE,OAAO;gBAAK;gBAC9B,gBAAgB;oBAAE,OAAO;gBAAK;gBAC9B,gBAAgB;oBAAE,OAAO;gBAAK;gBAC9B,gBAAgB;oBAAE,OAAO;gBAAK;gBAC9B,gBAAgB;oBAAE,OAAO;gBAAK;gBAC9B,iBAAiB;oBAAE,OAAO;gBAAI;gBAC9B,gBAAgB;oBAAE,OAAO;gBAAK;gBAC9B,mBAAmB;oBAAE,OAAO;gBAAK;gBACjC,eAAe;oBAAE,OAAO;gBAAI;YAC7B;YAEA,cACC,CAAC;;;;KAIA,CAAC;YAEH,gBACC,CAAC;;;;;;;;;;;;;;;;;;;;;;KAsBA,CAAC;QACJ;IAED;AAED;AAEA,gBAAgB,cAAc,GAAG,IAAI,iJAAA,CAAA,UAAO,CAAE,KAAK;AACnD,gBAAgB,cAAc,GAAG,IAAI,iJAAA,CAAA,UAAO,CAAE,KAAK"}},
    {"offset": {"line": 1792, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1798, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/three/examples/jsm/postprocessing/ShaderPass.js"],"sourcesContent":["import {\n\tShaderMaterial,\n\tUniformsUtils\n} from 'three';\nimport { Pass, FullScreenQuad } from './Pass.js';\n\nclass ShaderPass extends Pass {\n\n\tconstructor( shader, textureID ) {\n\n\t\tsuper();\n\n\t\tthis.textureID = ( textureID !== undefined ) ? textureID : 'tDiffuse';\n\n\t\tif ( shader instanceof ShaderMaterial ) {\n\n\t\t\tthis.uniforms = shader.uniforms;\n\n\t\t\tthis.material = shader;\n\n\t\t} else if ( shader ) {\n\n\t\t\tthis.uniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t\tthis.material = new ShaderMaterial( {\n\n\t\t\t\tname: ( shader.name !== undefined ) ? shader.name : 'unspecified',\n\t\t\t\tdefines: Object.assign( {}, shader.defines ),\n\t\t\t\tuniforms: this.uniforms,\n\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\tfragmentShader: shader.fragmentShader\n\n\t\t\t} );\n\n\t\t}\n\n\t\tthis.fsQuad = new FullScreenQuad( this.material );\n\n\t}\n\n\trender( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tif ( this.uniforms[ this.textureID ] ) {\n\n\t\t\tthis.uniforms[ this.textureID ].value = readBuffer.texture;\n\n\t\t}\n\n\t\tthis.fsQuad.material = this.material;\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget( writeBuffer );\n\t\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\t\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t}\n\n\tdispose() {\n\n\t\tthis.material.dispose();\n\n\t\tthis.fsQuad.dispose();\n\n\t}\n\n}\n\nexport { ShaderPass };\n"],"names":[],"mappings":";;;AAAA;AAIA;;;AAEA,MAAM,mBAAmB,kKAAA,CAAA,OAAI;IAE5B,YAAa,MAAM,EAAE,SAAS,CAAG;QAEhC,KAAK;QAEL,IAAI,CAAC,SAAS,GAAG,AAAE,cAAc,YAAc,YAAY;QAE3D,IAAK,kBAAkB,iJAAA,CAAA,iBAAc,EAAG;YAEvC,IAAI,CAAC,QAAQ,GAAG,OAAO,QAAQ;YAE/B,IAAI,CAAC,QAAQ,GAAG;QAEjB,OAAO,IAAK,QAAS;YAEpB,IAAI,CAAC,QAAQ,GAAG,iJAAA,CAAA,gBAAa,CAAC,KAAK,CAAE,OAAO,QAAQ;YAEpD,IAAI,CAAC,QAAQ,GAAG,IAAI,iJAAA,CAAA,iBAAc,CAAE;gBAEnC,MAAM,AAAE,OAAO,IAAI,KAAK,YAAc,OAAO,IAAI,GAAG;gBACpD,SAAS,OAAO,MAAM,CAAE,CAAC,GAAG,OAAO,OAAO;gBAC1C,UAAU,IAAI,CAAC,QAAQ;gBACvB,cAAc,OAAO,YAAY;gBACjC,gBAAgB,OAAO,cAAc;YAEtC;QAED;QAEA,IAAI,CAAC,MAAM,GAAG,IAAI,kKAAA,CAAA,iBAAc,CAAE,IAAI,CAAC,QAAQ;IAEhD;IAEA,OAAQ,QAAQ,EAAE,WAAW,EAAE,WAAW,0BAA0B,GAA3B,EAAgC;QAExE,IAAK,IAAI,CAAC,QAAQ,CAAE,IAAI,CAAC,SAAS,CAAE,EAAG;YAEtC,IAAI,CAAC,QAAQ,CAAE,IAAI,CAAC,SAAS,CAAE,CAAC,KAAK,GAAG,WAAW,OAAO;QAE3D;QAEA,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ;QAEpC,IAAK,IAAI,CAAC,cAAc,EAAG;YAE1B,SAAS,eAAe,CAAE;YAC1B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAE;QAErB,OAAO;YAEN,SAAS,eAAe,CAAE;YAC1B,mHAAmH;YACnH,IAAK,IAAI,CAAC,KAAK,EAAG,SAAS,KAAK,CAAE,SAAS,cAAc,EAAE,SAAS,cAAc,EAAE,SAAS,gBAAgB;YAC7G,IAAI,CAAC,MAAM,CAAC,MAAM,CAAE;QAErB;IAED;IAEA,UAAU;QAET,IAAI,CAAC,QAAQ,CAAC,OAAO;QAErB,IAAI,CAAC,MAAM,CAAC,OAAO;IAEpB;AAED"}},
    {"offset": {"line": 1845, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1851, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/three/examples/jsm/postprocessing/MaskPass.js"],"sourcesContent":["import { Pass } from './Pass.js';\n\nclass MaskPass extends Pass {\n\n\tconstructor( scene, camera ) {\n\n\t\tsuper();\n\n\t\tthis.scene = scene;\n\t\tthis.camera = camera;\n\n\t\tthis.clear = true;\n\t\tthis.needsSwap = false;\n\n\t\tthis.inverse = false;\n\n\t}\n\n\trender( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tconst context = renderer.getContext();\n\t\tconst state = renderer.state;\n\n\t\t// don't update color or depth\n\n\t\tstate.buffers.color.setMask( false );\n\t\tstate.buffers.depth.setMask( false );\n\n\t\t// lock buffers\n\n\t\tstate.buffers.color.setLocked( true );\n\t\tstate.buffers.depth.setLocked( true );\n\n\t\t// set up stencil\n\n\t\tlet writeValue, clearValue;\n\n\t\tif ( this.inverse ) {\n\n\t\t\twriteValue = 0;\n\t\t\tclearValue = 1;\n\n\t\t} else {\n\n\t\t\twriteValue = 1;\n\t\t\tclearValue = 0;\n\n\t\t}\n\n\t\tstate.buffers.stencil.setTest( true );\n\t\tstate.buffers.stencil.setOp( context.REPLACE, context.REPLACE, context.REPLACE );\n\t\tstate.buffers.stencil.setFunc( context.ALWAYS, writeValue, 0xffffffff );\n\t\tstate.buffers.stencil.setClear( clearValue );\n\t\tstate.buffers.stencil.setLocked( true );\n\n\t\t// draw into the stencil buffer\n\n\t\trenderer.setRenderTarget( readBuffer );\n\t\tif ( this.clear ) renderer.clear();\n\t\trenderer.render( this.scene, this.camera );\n\n\t\trenderer.setRenderTarget( writeBuffer );\n\t\tif ( this.clear ) renderer.clear();\n\t\trenderer.render( this.scene, this.camera );\n\n\t\t// unlock color and depth buffer and make them writable for subsequent rendering/clearing\n\n\t\tstate.buffers.color.setLocked( false );\n\t\tstate.buffers.depth.setLocked( false );\n\n\t\tstate.buffers.color.setMask( true );\n\t\tstate.buffers.depth.setMask( true );\n\n\t\t// only render where stencil is set to 1\n\n\t\tstate.buffers.stencil.setLocked( false );\n\t\tstate.buffers.stencil.setFunc( context.EQUAL, 1, 0xffffffff ); // draw if == 1\n\t\tstate.buffers.stencil.setOp( context.KEEP, context.KEEP, context.KEEP );\n\t\tstate.buffers.stencil.setLocked( true );\n\n\t}\n\n}\n\nclass ClearMaskPass extends Pass {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.needsSwap = false;\n\n\t}\n\n\trender( renderer /*, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\n\n\t\trenderer.state.buffers.stencil.setLocked( false );\n\t\trenderer.state.buffers.stencil.setTest( false );\n\n\t}\n\n}\n\nexport { MaskPass, ClearMaskPass };\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,iBAAiB,kKAAA,CAAA,OAAI;IAE1B,YAAa,KAAK,EAAE,MAAM,CAAG;QAE5B,KAAK;QAEL,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,MAAM,GAAG;QAEd,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,SAAS,GAAG;QAEjB,IAAI,CAAC,OAAO,GAAG;IAEhB;IAEA,OAAQ,QAAQ,EAAE,WAAW,EAAE,WAAW,0BAA0B,GAA3B,EAAgC;QAExE,MAAM,UAAU,SAAS,UAAU;QACnC,MAAM,QAAQ,SAAS,KAAK;QAE5B,8BAA8B;QAE9B,MAAM,OAAO,CAAC,KAAK,CAAC,OAAO,CAAE;QAC7B,MAAM,OAAO,CAAC,KAAK,CAAC,OAAO,CAAE;QAE7B,eAAe;QAEf,MAAM,OAAO,CAAC,KAAK,CAAC,SAAS,CAAE;QAC/B,MAAM,OAAO,CAAC,KAAK,CAAC,SAAS,CAAE;QAE/B,iBAAiB;QAEjB,IAAI,YAAY;QAEhB,IAAK,IAAI,CAAC,OAAO,EAAG;YAEnB,aAAa;YACb,aAAa;QAEd,OAAO;YAEN,aAAa;YACb,aAAa;QAEd;QAEA,MAAM,OAAO,CAAC,OAAO,CAAC,OAAO,CAAE;QAC/B,MAAM,OAAO,CAAC,OAAO,CAAC,KAAK,CAAE,QAAQ,OAAO,EAAE,QAAQ,OAAO,EAAE,QAAQ,OAAO;QAC9E,MAAM,OAAO,CAAC,OAAO,CAAC,OAAO,CAAE,QAAQ,MAAM,EAAE,YAAY;QAC3D,MAAM,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAE;QAChC,MAAM,OAAO,CAAC,OAAO,CAAC,SAAS,CAAE;QAEjC,+BAA+B;QAE/B,SAAS,eAAe,CAAE;QAC1B,IAAK,IAAI,CAAC,KAAK,EAAG,SAAS,KAAK;QAChC,SAAS,MAAM,CAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM;QAExC,SAAS,eAAe,CAAE;QAC1B,IAAK,IAAI,CAAC,KAAK,EAAG,SAAS,KAAK;QAChC,SAAS,MAAM,CAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM;QAExC,yFAAyF;QAEzF,MAAM,OAAO,CAAC,KAAK,CAAC,SAAS,CAAE;QAC/B,MAAM,OAAO,CAAC,KAAK,CAAC,SAAS,CAAE;QAE/B,MAAM,OAAO,CAAC,KAAK,CAAC,OAAO,CAAE;QAC7B,MAAM,OAAO,CAAC,KAAK,CAAC,OAAO,CAAE;QAE7B,wCAAwC;QAExC,MAAM,OAAO,CAAC,OAAO,CAAC,SAAS,CAAE;QACjC,MAAM,OAAO,CAAC,OAAO,CAAC,OAAO,CAAE,QAAQ,KAAK,EAAE,GAAG,aAAc,eAAe;QAC9E,MAAM,OAAO,CAAC,OAAO,CAAC,KAAK,CAAE,QAAQ,IAAI,EAAE,QAAQ,IAAI,EAAE,QAAQ,IAAI;QACrE,MAAM,OAAO,CAAC,OAAO,CAAC,SAAS,CAAE;IAElC;AAED;AAEA,MAAM,sBAAsB,kKAAA,CAAA,OAAI;IAE/B,aAAc;QAEb,KAAK;QAEL,IAAI,CAAC,SAAS,GAAG;IAElB;IAEA,OAAQ,SAAS,mDAAmD,GAApD,EAAyD;QAExE,SAAS,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAE;QAC1C,SAAS,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAE;IAEzC;AAED"}},
    {"offset": {"line": 1919, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1925, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/three/examples/jsm/postprocessing/EffectComposer.js"],"sourcesContent":["import {\n\tClock,\n\tHalfFloatType,\n\tNoBlending,\n\tVector2,\n\tWebGLRenderTarget\n} from 'three';\nimport { CopyShader } from '../shaders/CopyShader.js';\nimport { ShaderPass } from './ShaderPass.js';\nimport { MaskPass } from './MaskPass.js';\nimport { ClearMaskPass } from './MaskPass.js';\n\nclass EffectComposer {\n\n\tconstructor( renderer, renderTarget ) {\n\n\t\tthis.renderer = renderer;\n\n\t\tthis._pixelRatio = renderer.getPixelRatio();\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\tconst size = renderer.getSize( new Vector2() );\n\t\t\tthis._width = size.width;\n\t\t\tthis._height = size.height;\n\n\t\t\trenderTarget = new WebGLRenderTarget( this._width * this._pixelRatio, this._height * this._pixelRatio, { type: HalfFloatType } );\n\t\t\trenderTarget.texture.name = 'EffectComposer.rt1';\n\n\t\t} else {\n\n\t\t\tthis._width = renderTarget.width;\n\t\t\tthis._height = renderTarget.height;\n\n\t\t}\n\n\t\tthis.renderTarget1 = renderTarget;\n\t\tthis.renderTarget2 = renderTarget.clone();\n\t\tthis.renderTarget2.texture.name = 'EffectComposer.rt2';\n\n\t\tthis.writeBuffer = this.renderTarget1;\n\t\tthis.readBuffer = this.renderTarget2;\n\n\t\tthis.renderToScreen = true;\n\n\t\tthis.passes = [];\n\n\t\tthis.copyPass = new ShaderPass( CopyShader );\n\t\tthis.copyPass.material.blending = NoBlending;\n\n\t\tthis.clock = new Clock();\n\n\t}\n\n\tswapBuffers() {\n\n\t\tconst tmp = this.readBuffer;\n\t\tthis.readBuffer = this.writeBuffer;\n\t\tthis.writeBuffer = tmp;\n\n\t}\n\n\taddPass( pass ) {\n\n\t\tthis.passes.push( pass );\n\t\tpass.setSize( this._width * this._pixelRatio, this._height * this._pixelRatio );\n\n\t}\n\n\tinsertPass( pass, index ) {\n\n\t\tthis.passes.splice( index, 0, pass );\n\t\tpass.setSize( this._width * this._pixelRatio, this._height * this._pixelRatio );\n\n\t}\n\n\tremovePass( pass ) {\n\n\t\tconst index = this.passes.indexOf( pass );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tthis.passes.splice( index, 1 );\n\n\t\t}\n\n\t}\n\n\tisLastEnabledPass( passIndex ) {\n\n\t\tfor ( let i = passIndex + 1; i < this.passes.length; i ++ ) {\n\n\t\t\tif ( this.passes[ i ].enabled ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\trender( deltaTime ) {\n\n\t\t// deltaTime value is in seconds\n\n\t\tif ( deltaTime === undefined ) {\n\n\t\t\tdeltaTime = this.clock.getDelta();\n\n\t\t}\n\n\t\tconst currentRenderTarget = this.renderer.getRenderTarget();\n\n\t\tlet maskActive = false;\n\n\t\tfor ( let i = 0, il = this.passes.length; i < il; i ++ ) {\n\n\t\t\tconst pass = this.passes[ i ];\n\n\t\t\tif ( pass.enabled === false ) continue;\n\n\t\t\tpass.renderToScreen = ( this.renderToScreen && this.isLastEnabledPass( i ) );\n\t\t\tpass.render( this.renderer, this.writeBuffer, this.readBuffer, deltaTime, maskActive );\n\n\t\t\tif ( pass.needsSwap ) {\n\n\t\t\t\tif ( maskActive ) {\n\n\t\t\t\t\tconst context = this.renderer.getContext();\n\t\t\t\t\tconst stencil = this.renderer.state.buffers.stencil;\n\n\t\t\t\t\t//context.stencilFunc( context.NOTEQUAL, 1, 0xffffffff );\n\t\t\t\t\tstencil.setFunc( context.NOTEQUAL, 1, 0xffffffff );\n\n\t\t\t\t\tthis.copyPass.render( this.renderer, this.writeBuffer, this.readBuffer, deltaTime );\n\n\t\t\t\t\t//context.stencilFunc( context.EQUAL, 1, 0xffffffff );\n\t\t\t\t\tstencil.setFunc( context.EQUAL, 1, 0xffffffff );\n\n\t\t\t\t}\n\n\t\t\t\tthis.swapBuffers();\n\n\t\t\t}\n\n\t\t\tif ( MaskPass !== undefined ) {\n\n\t\t\t\tif ( pass instanceof MaskPass ) {\n\n\t\t\t\t\tmaskActive = true;\n\n\t\t\t\t} else if ( pass instanceof ClearMaskPass ) {\n\n\t\t\t\t\tmaskActive = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.renderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n\treset( renderTarget ) {\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\tconst size = this.renderer.getSize( new Vector2() );\n\t\t\tthis._pixelRatio = this.renderer.getPixelRatio();\n\t\t\tthis._width = size.width;\n\t\t\tthis._height = size.height;\n\n\t\t\trenderTarget = this.renderTarget1.clone();\n\t\t\trenderTarget.setSize( this._width * this._pixelRatio, this._height * this._pixelRatio );\n\n\t\t}\n\n\t\tthis.renderTarget1.dispose();\n\t\tthis.renderTarget2.dispose();\n\t\tthis.renderTarget1 = renderTarget;\n\t\tthis.renderTarget2 = renderTarget.clone();\n\n\t\tthis.writeBuffer = this.renderTarget1;\n\t\tthis.readBuffer = this.renderTarget2;\n\n\t}\n\n\tsetSize( width, height ) {\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\n\t\tconst effectiveWidth = this._width * this._pixelRatio;\n\t\tconst effectiveHeight = this._height * this._pixelRatio;\n\n\t\tthis.renderTarget1.setSize( effectiveWidth, effectiveHeight );\n\t\tthis.renderTarget2.setSize( effectiveWidth, effectiveHeight );\n\n\t\tfor ( let i = 0; i < this.passes.length; i ++ ) {\n\n\t\t\tthis.passes[ i ].setSize( effectiveWidth, effectiveHeight );\n\n\t\t}\n\n\t}\n\n\tsetPixelRatio( pixelRatio ) {\n\n\t\tthis._pixelRatio = pixelRatio;\n\n\t\tthis.setSize( this._width, this._height );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.renderTarget1.dispose();\n\t\tthis.renderTarget2.dispose();\n\n\t\tthis.copyPass.dispose();\n\n\t}\n\n}\n\nexport { EffectComposer };\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2063, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}