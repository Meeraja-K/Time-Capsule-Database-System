{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/app/newhome/createCapsuleForm/page.tsx"],"sourcesContent":["'use client';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useRouter } from 'next/navigation'; // Import the router for navigation\r\nimport axios from \"axios\";\r\nimport './page.css';\r\n\r\nconst CreateCapsuleForm = () => {\r\n  const [capsuleName, setCapsuleName] = useState(\"\");\r\n  const [releaseDate, setReleaseDate] = useState(\"\");\r\n  const [releaseTime, setReleaseTime] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [username, setUsername] = useState<string | null>(null);\r\n  const router = useRouter(); // Use Next.js router for redirection\r\n\r\n  useEffect(() => {\r\n    if (typeof window !== \"undefined\") {\r\n      const storedUser = localStorage.getItem('user');\r\n      const storedUsername = storedUser ? JSON.parse(storedUser).username : null;\r\n      setUsername(storedUsername); // Update state with the retrieved username\r\n\r\n      if (!storedUsername) {\r\n        setError(\"User is not logged in. Please log in to continue.\");\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const validateForm = () => {\r\n    if (!capsuleName || !releaseDate || !releaseTime) {\r\n      setError(\"All fields are required.\");\r\n      return false;\r\n    }\r\n    setError(\"\");\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (!username) {\r\n      setError(\"User is not logged in. Please log in to continue.\");\r\n      return;\r\n    }\r\n\r\n    // Validate the form\r\n    if (validateForm()) {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append(\"username\", username);\r\n        formData.append(\"capsule_name\", capsuleName);\r\n        formData.append(\"release_date\", releaseDate);\r\n        formData.append(\"release_time\", releaseTime);\r\n\r\n        // Single API call to create the capsule\r\n        const response = await axios.post(\"/api/time-capsule\", formData, {\r\n          headers: { \"Content-Type\": \"multipart/form-data\" },\r\n        });\r\n\r\n        console.log(\"Time Capsule Created\", response.data);\r\n        const { capsule_name } = response.data;\r\n        alert(\"Time Capsule Created!\"); // Display the success message\r\n\r\n        // Redirect to the addContents page\r\n        router.push(`/newhome/addContents?capsuleName=${encodeURIComponent(capsule_name)}`);\r\n      } catch (error) {\r\n        console.error(\"Error submitting form\", error);\r\n        setError(\"An error occurred while submitting the form.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <form onSubmit={handleSubmit}>\r\n        <h2>Create Capsule</h2>\r\n        <label>\r\n          Capsule Name:\r\n          <input\r\n            type=\"text\"\r\n            value={capsuleName}\r\n            onChange={(e) => setCapsuleName(e.target.value)}\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Release Date:\r\n          <input\r\n            type=\"date\"\r\n            value={releaseDate}\r\n            onChange={(e) => setReleaseDate(e.target.value)}\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Release Time:\r\n          <input\r\n            type=\"time\"\r\n            value={releaseTime}\r\n            onChange={(e) => setReleaseTime(e.target.value)}\r\n            required\r\n          />\r\n        </label>\r\n        {error && <p className=\"error\">{error}</p>}\r\n        <button type=\"submit\">Create Capsule</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateCapsuleForm;\r\n"],"names":[],"mappings":";;;;AACA;AACA,mOAA6C,mCAAmC;AAChF;AAHA;;;;;;AAMA,MAAM,oBAAoB;IACxB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IACxD,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD,KAAK,qCAAqC;IAEjE,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,uCAAmC;;QAQnC;IACF,GAAG,EAAE;IAEL,MAAM,eAAe;QACnB,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,aAAa;YAChD,SAAS;YACT,OAAO;QACT;QACA,SAAS;QACT,OAAO;IACT;IAEA,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAEhB,IAAI,CAAC,UAAU;YACb,SAAS;YACT;QACF;QAEA,oBAAoB;QACpB,IAAI,gBAAgB;YAClB,IAAI;gBACF,MAAM,WAAW,IAAI;gBACrB,SAAS,MAAM,CAAC,YAAY;gBAC5B,SAAS,MAAM,CAAC,gBAAgB;gBAChC,SAAS,MAAM,CAAC,gBAAgB;gBAChC,SAAS,MAAM,CAAC,gBAAgB;gBAEhC,wCAAwC;gBACxC,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,qBAAqB,UAAU;oBAC/D,SAAS;wBAAE,gBAAgB;oBAAsB;gBACnD;gBAEA,QAAQ,GAAG,CAAC,wBAAwB,SAAS,IAAI;gBACjD,MAAM,EAAE,YAAY,EAAE,GAAG,SAAS,IAAI;gBACtC,MAAM,0BAA0B,8BAA8B;gBAE9D,mCAAmC;gBACnC,OAAO,IAAI,CAAC,CAAC,iCAAiC,EAAE,mBAAmB,eAAe;YACpF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,yBAAyB;gBACvC,SAAS;YACX;QACF;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAK,UAAU;;8BACd,8OAAC;8BAAG;;;;;;8BACJ,8OAAC;;wBAAM;sCAEL,8OAAC;4BACC,MAAK;4BACL,OAAO;4BACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;4BAC9C,QAAQ;;;;;;;;;;;;8BAGZ,8OAAC;;wBAAM;sCAEL,8OAAC;4BACC,MAAK;4BACL,OAAO;4BACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;4BAC9C,QAAQ;;;;;;;;;;;;8BAGZ,8OAAC;;wBAAM;sCAEL,8OAAC;4BACC,MAAK;4BACL,OAAO;4BACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;4BAC9C,QAAQ;;;;;;;;;;;;gBAGX,uBAAS,8OAAC;oBAAE,WAAU;8BAAS;;;;;;8BAChC,8OAAC;oBAAO,MAAK;8BAAS;;;;;;;;;;;;;;;;;AAI9B;uCAEe"}},
    {"offset": {"line": 265, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}