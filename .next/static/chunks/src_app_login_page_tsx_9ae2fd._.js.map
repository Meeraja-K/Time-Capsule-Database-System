{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/app/login/page.tsx"],"sourcesContent":["// pages/login.tsx\r\n\r\n\"use client\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport \"./page.css\"; // Update path to login.css as needed\r\n\r\nexport default function LoginPage() {\r\n  const [showLogin, setShowLogin] = useState(false); // State to toggle between login and register\r\n  const [formData, setFormData] = useState({\r\n    fullName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    fullName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  const resetForm = () => {\r\n    setFormData({\r\n      fullName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n    });\r\n  };\r\n\r\n\r\n  const validateInput = (name: string, value: string) => {\r\n    switch (name) {\r\n      case \"fullName\":\r\n      case \"lastName\":\r\n        // Only allow alphabets (spaces are allowed for full name)\r\n        if (!/^[a-zA-Z\\s]*$/.test(value)) {\r\n          return \"Name must contain only alphabets.\";\r\n        }\r\n        return \"\"; // No error\r\n      case \"email\":\r\n        // Standard email format validation\r\n        if (\r\n          !/^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/.test(value)\r\n        ) {\r\n          return \"Enter a valid email address.\";\r\n        }\r\n        return \"\"; // No error\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    const error = validateInput(name, value);\r\n    setErrors({ ...errors, [name]: error });\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleRegister = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    const validationErrors = {\r\n      fullName: validateInput(\"fullName\", formData.fullName),\r\n      lastName: validateInput(\"lastName\", formData.lastName),\r\n      email: validateInput(\"email\", formData.email),\r\n    };\r\n    setErrors(validationErrors);\r\n\r\n    if (Object.values(validationErrors).some((err) => err)) {\r\n      alert(\"Please fix validation errors before submitting.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"/api/register\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        alert(data.message);\r\n        localStorage.setItem('user', JSON.stringify({ username: formData.username }));\r\n        window.location.href = \"newhome/profile\";\r\n      } else {\r\n        alert(data.error);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error registering user:\", error);\r\n      alert(\"Something went wrong. Please try again.\");\r\n    } finally {\r\n      resetForm(); // Clear form after submission\r\n    }\r\n  };\r\n\r\n  const handleLogin = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch(\"/api/login\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          username: formData.username,\r\n          password: formData.password,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        alert(data.message);\r\n        localStorage.setItem('user', JSON.stringify({\r\n          username: data.user.username,\r\n          isAdmin: data.user.isAdmin, // Store the isAdmin flag in localStorage\r\n        }));\r\n  \r\n        // Redirect based on user role (admin or regular user)\r\n        if (data.user.isAdmin) {\r\n          window.location.href = \"/adminPage\"; // Admin page\r\n        } else {\r\n          window.location.href = \"/newhome/profile\"; // Regular user profile page\r\n        }\r\n      } else {\r\n        alert(data.error); // Stay on the same page\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error logging in:\", error);\r\n      alert(\"Something went wrong. Please try again.\");\r\n    }\r\n  };\r\n\r\n\r\n  const handleToggle = () => {\r\n    setShowLogin(!showLogin); // Switch between login and register\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      {!showLogin ? (\r\n        <div className=\"form-container\">\r\n          <h2>Register</h2>\r\n          <form onSubmit={handleRegister}>\r\n            <label>Full Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"fullName\"\r\n              placeholder=\"Enter Full Name...\"\r\n              required\r\n              value={formData.fullName}\r\n              onChange={handleChange}\r\n            />\r\n            {errors.fullName && <p className=\"error-message\">{errors.fullName}</p>}\r\n\r\n            <label>Last Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"lastName\"\r\n              placeholder=\"Enter Last Name...\"\r\n              required\r\n              value={formData.lastName}\r\n              onChange={handleChange}\r\n            />\r\n            {errors.lastName && <p className=\"error-message\">{errors.lastName}</p>}\r\n\r\n            <label>Email:</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Enter Email...\"\r\n              required\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n            />\r\n            {errors.email && <p className=\"error-message\">{errors.email}</p>}\r\n\r\n            <label>Password:</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Enter Password...\"\r\n              required\r\n              value={formData.password}\r\n              onChange={handleChange}\r\n            />\r\n\r\n            <label>Username:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"username\"\r\n              placeholder=\"Enter Username...\"\r\n              required\r\n              value={formData.username}\r\n              onChange={handleChange}\r\n            />\r\n\r\n            <button type=\"submit\" className=\"form-button\">\r\n              Register\r\n            </button>\r\n          </form>\r\n          <p>\r\n            Already have an account?{\" \"}\r\n            <button className=\"toggle-button\" onClick={handleToggle}>\r\n              Login\r\n            </button>\r\n          </p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"form-container\">\r\n          <h2>Login</h2>\r\n          <form onSubmit={handleLogin}>\r\n    <label>Username:</label>\r\n    <input\r\n      type=\"text\"\r\n      name=\"username\"\r\n      placeholder=\"Enter Username...\"\r\n      required\r\n      value={formData.username} // Bind to state\r\n      onChange={handleChange}   // Handle changes\r\n    />\r\n\r\n    <label>Password:</label>\r\n    <input\r\n      type=\"password\"\r\n      name=\"password\"\r\n      placeholder=\"Enter Password...\"\r\n      required\r\n      value={formData.password} // Bind to state\r\n      onChange={handleChange}   // Handle changes\r\n    />\r\n\r\n    <button type=\"submit\" className=\"form-button\">\r\n      Login\r\n    </button>\r\n  </form>\r\n          <p>\r\n            New User?{\" \"}\r\n            <button className=\"toggle-button\" onClick={handleToggle}>\r\n              Register\r\n            </button>\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 424, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}