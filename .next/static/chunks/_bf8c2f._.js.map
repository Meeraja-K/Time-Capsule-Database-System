{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/app/newhome/addSharedUsers/page.tsx"],"sourcesContent":["'use client';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useRouter, useSearchParams } from 'next/navigation';\r\nimport './page.css';\r\n\r\n// Declare SharedUser type\r\ntype SharedUser = { username: string; };\r\n\r\nconst SharedUsersForm = () => {\r\n  const [sharedUsers, setSharedUsers] = useState<SharedUser[]>([{ username: \"\" }]);\r\n  const [error, setError] = useState(\"\");\r\n  const [capsuleId, setCapsuleId] = useState<string | null>(null);\r\n\r\n  const searchParams = useSearchParams();\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    const capsuleIdFromUrl = searchParams.get('capsuleId');\r\n    if (capsuleIdFromUrl) {\r\n      setCapsuleId(capsuleIdFromUrl);\r\n    } else {\r\n      setError(\"Capsule ID is missing.\");\r\n    }\r\n\r\n    // Clear temporary variables except username\r\n    const storedUser = localStorage.getItem('user');\r\n    if (storedUser) {\r\n      const storedUsername = JSON.parse(storedUser).username;\r\n      // Ensure only username is kept in state and clear other fields\r\n      setSharedUsers([{ username: storedUsername }]);\r\n    }\r\n  }, [searchParams]);\r\n\r\n  const handleSharedUserChange = (index: number, value: string) => {\r\n    const newSharedUsers = [...sharedUsers];\r\n    newSharedUsers[index].username = value;\r\n    setSharedUsers(newSharedUsers);\r\n  };\r\n\r\n  const addSharedUser = () => {\r\n    setSharedUsers([...sharedUsers, { username: \"\" }]);\r\n  };\r\n\r\n  const validateAndSubmit = async () => {\r\n    if (sharedUsers.some(user => !user.username)) {\r\n      setError(\"Please fill all shared user details.\");\r\n      return;\r\n    }\r\n    setError(\"\");\r\n\r\n    try {\r\n      const response = await fetch(\"/api/addSharedUsers\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ shared_users: sharedUsers, capsule_id: capsuleId }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        alert(\"Shared users data submitted successfully!\");\r\n        router.push('/newhome/dashboardPage');\r\n      } else {\r\n        setError(data.error || \"Failed to submit shared users.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error submitting shared users:\", error);\r\n      setError(\"An error occurred while submitting shared users.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h2>Share Capsule</h2>\r\n      {sharedUsers.map((user, index) => (\r\n        <div key={index}>\r\n          <label>\r\n            Username:\r\n            <input\r\n              type=\"text\"\r\n              value={user.username}\r\n              onChange={(e) => handleSharedUserChange(index, e.target.value)}\r\n              required\r\n            />\r\n          </label>\r\n        </div>\r\n      ))}\r\n      <button type=\"button\" onClick={addSharedUser}>Add Shared User</button>\r\n      {error && <p className=\"error\">{error}</p>}\r\n      <button type=\"button\" onClick={validateAndSubmit}>Submit</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SharedUsersForm;\r\n"],"names":[],"mappings":";;;;AACA;AACA;;;AAFA;;;;AAQA,MAAM,kBAAkB;;IACtB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAgB;QAAC;YAAE,UAAU;QAAG;KAAE;IAC/E,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAE1D,MAAM,eAAe,CAAA,GAAA,qIAAA,CAAA,kBAAe,AAAD;IACnC,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,mBAAmB,aAAa,GAAG,CAAC;QAC1C,IAAI,kBAAkB;YACpB,aAAa;QACf,OAAO;YACL,SAAS;QACX;QAEA,4CAA4C;QAC5C,MAAM,aAAa,aAAa,OAAO,CAAC;QACxC,IAAI,YAAY;YACd,MAAM,iBAAiB,KAAK,KAAK,CAAC,YAAY,QAAQ;YACtD,+DAA+D;YAC/D,eAAe;gBAAC;oBAAE,UAAU;gBAAe;aAAE;QAC/C;IACF,GAAG;QAAC;KAAa;IAEjB,MAAM,yBAAyB,CAAC,OAAe;QAC7C,MAAM,iBAAiB;eAAI;SAAY;QACvC,cAAc,CAAC,MAAM,CAAC,QAAQ,GAAG;QACjC,eAAe;IACjB;IAEA,MAAM,gBAAgB;QACpB,eAAe;eAAI;YAAa;gBAAE,UAAU;YAAG;SAAE;IACnD;IAEA,MAAM,oBAAoB;QACxB,IAAI,YAAY,IAAI,CAAC,CAAA,OAAQ,CAAC,KAAK,QAAQ,GAAG;YAC5C,SAAS;YACT;QACF;QACA,SAAS;QAET,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,uBAAuB;gBAClD,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;oBAAE,cAAc;oBAAa,YAAY;gBAAU;YAC1E;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAEhC,IAAI,SAAS,EAAE,EAAE;gBACf,MAAM;gBACN,OAAO,IAAI,CAAC;YACd,OAAO;gBACL,SAAS,KAAK,KAAK,IAAI;YACzB;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,kCAAkC;YAChD,SAAS;QACX;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;0BAAG;;;;;;YACH,YAAY,GAAG,CAAC,CAAC,MAAM,sBACtB,6LAAC;8BACC,cAAA,6LAAC;;4BAAM;0CAEL,6LAAC;gCACC,MAAK;gCACL,OAAO,KAAK,QAAQ;gCACpB,UAAU,CAAC,IAAM,uBAAuB,OAAO,EAAE,MAAM,CAAC,KAAK;gCAC7D,QAAQ;;;;;;;;;;;;mBAPJ;;;;;0BAYZ,6LAAC;gBAAO,MAAK;gBAAS,SAAS;0BAAe;;;;;;YAC7C,uBAAS,6LAAC;gBAAE,WAAU;0BAAS;;;;;;0BAChC,6LAAC;gBAAO,MAAK;gBAAS,SAAS;0BAAmB;;;;;;;;;;;;AAGxD;GAtFM;;QAKiB,qIAAA,CAAA,kBAAe;QACrB,qIAAA,CAAA,YAAS;;;KANpB;uCAwFS"}},
    {"offset": {"line": 176, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO"}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}